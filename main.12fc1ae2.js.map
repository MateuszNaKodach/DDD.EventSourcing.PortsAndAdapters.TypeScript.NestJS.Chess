{"version":3,"sources":["../../src/main/board/helper.ts","../../src/main/board/square.ts","../../src/main/pieces/side.ts","../../src/main/pieces/piece-move.ts","../../src/main/pieces/piece.ts","../../src/main/pieces/bishop.ts","../../src/main/pieces/rook.ts","../../src/main/pieces/king.ts","../../src/main/pieces/knight.ts","../../src/main/pieces/pawn.ts","../../src/main/pieces/piece-name.ts","../../src/main/pieces/queen.ts","../../src/main/pieces/pieces.ts","../../src/main/pieces/index.ts","../../src/main/aggregate/aggregate-version.valueobject.ts","../../src/main/aggregate/index.ts","../../src/main/event/abstract-domain-event.ts","../../src/main/event/abstract-failure-domain-event.ts","../../src/main/event/abstract-success-domain-event.ts","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/v1.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/parse.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/v35.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/md5.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/v3.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/sha1.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/v5.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/nil.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/version.js","../../node_modules/@ddd-es-ts-chess/ddd-building-blocks-domain/node_modules/uuid/dist/esm-browser/index.js","../../src/main/event/correlation-id.valueobject.ts","../../src/main/event/causation-id.valueobject.ts","../../src/main/event/domain-event-id.valueobject.ts","../../src/main/event/domain-events.ts","../../src/main/event/index.ts","../../src/main/aggregate-mutable/abstract-mutable-aggregate-root.ts","../../src/main/aggregate-mutable/index.ts","../../src/main/extensions/defined.ts","../../src/main/extensions/index.ts","../../src/main/result/result.ts","../../src/main/result/index.ts","../../src/main/test/aggregate-root.test-assertions.ts","../../src/main/test/index.ts","../../src/main/time/time-provider.ts","../../src/main/time/index.ts","../src/main/index.ts","../../src/main/board/chess-board.ts","../../src/main/board/index.ts","../../src/main/event/chess-game-abstract-domain-event.ts","../../src/main/event/checkmate-has-occurred.ts","../../src/main/event/chess-game-finished.ts","../../src/main/event/chess-game-started.ts","../../src/main/event/chess-game-was-lost.ts","../../src/main/event/chess-game-was-won.ts","../../src/main/event/king-was-checked.ts","../../src/main/event/king-was-unchecked.ts","../../src/main/event/pawn-promotion-was-enabled.ts","../../src/main/event/pawn-was-not-promoted.ts","../../src/main/event/pawn-was-promoted.ts","../../src/main/event/piece-was-captured.ts","../../src/main/event/piece-was-moved.ts","../../src/main/event/piece-was-not-moved.ts","../../src/main/event/stalemate-has-occurred.ts","../../src/main/history/chess-game-history-log.ts","../../src/main/history/index.ts","../../src/main/event/chess-game-not-started.ts","../../src/main/game/chess-game.ts","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/v1.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/parse.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/v35.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/md5.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/v3.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/sha1.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/v5.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/nil.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/version.js","../../node_modules/@ddd-es-ts-chess/chess-domain/node_modules/uuid/dist/esm-browser/index.js","../../src/main/game/chess-game-id.ts","../../src/main/game/promotion-availability-policy.ts","../../src/main/game/player-id.ts","../../src/main/game/index.ts","src/main/chess/presentation/font-awesome/font-awesome-piece-icons.ts","src/main/chess/presentation/square-view.ts","src/main/chess/presentation/web-chess-game-view.ts","../src/main/emoji-pieces-configuration.ts","../src/main/piece-emoji.ts","../src/main/piece-to-emoji-mapper.ts","src/main/chess/infrastructure/board/emoji-chess-board-generator.ts","src/main/chess/presentation/chess-board-presenter.ts","src/main/chess/presentation/chess-game-history-presenter.ts","src/main/chess/infrastructure/time/system-time-provider.ts","src/main/main.ts"],"names":["getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","validate","uuid","REGEX","test","stringify","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v1","_nodeId","_clockseq","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","parse","v","parseInt","slice","stringToBytes","str","unescape","encodeURIComponent","bytes","charCodeAt","DNS","URL","name","version","hashfunc","generateUUID","value","namespace","set","err","md5","msg","md5ToHexEncodedArray","wordsToMd5","bytesToWords","input","output","length32","x","hex","charAt","getOutputLength","inputLength8","len","a","c","d","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","Uint32Array","y","lsw","msw","bitRotateLeft","num","cnt","md5cmn","q","s","t","v3","v4","rnds","sha1","f","z","ROTL","K","H","isArray","prototype","call","l","N","Math","ceil","M","_i","j","pow","floor","_i2","W","_t","e","_t2","T","v5"],"mappings":"A8EsNekE,AKtNA,AXAA,ADad,AUkFcyC,aH3Ef,AKpBe,AXAA,ADad,AUXD,OEFe,AXAA,ADad,EOOQzC,AGlBA0C,EHkBItD,AGlBFgD,EAAG5B,CHmBR,CGnBWoB,EHmBM,AGnBHe,GACVP,EEHK,AXAA,ADad,KUVSA,GEHK,AXAA,ADad,AUTQ,IHiBIhD,CGjBJ,CHiBwB,CACzBa,AGjBKO,IHiBLP,EAAMf,AKtBC,AXAA,ADad,CYbc,AXAA,ADad,AURYsB,EAAIoB,GAAKpB,EELP,AXAA,ADad,AURyBmC,CHiBHxD,CGfd,EEPM,AXAA,ADad,GUNQ,EACIqB,GERE,AXAA,ADad,IULYA,EAAIoB,EHcyBxC,APTzC,AULoBuD,EVHrB,AUKS,EHcLvD,CKxBW,AXAA,CMwBH,APnBRtD,CYLW,AXAA,ASUN,CVL+B,CUM3B0E,CHaGrE,CKxBD,AXAA,EWAA,AXAA,GSWFqE,EAAIoB,EAAIpB,CHaMP,CGbF0C,CHaMxF,CGbFyE,EAAIe,EVNJ5G,AUQpB,GHaA,EGbA,EHaA,AGZIyE,CVT0CzE,GOqB1Ca,EAAI,CGZJ4D,CHYO5D,APrB0Cd,CUS7C8F,CHYO3B,CGZH0C,CHYOxF,EGR5B,GElBe,IL0BuBP,EAChCwC,AGTGwD,EHSGhG,AK3BG,AZKkEb,AUanEyE,EAAG7B,CHSAsB,EAAIZ,AGRZmB,EVd+E1E,CYLzE,IFmBN0E,GAAK7B,CHQkB/B,CGRd4D,EHYTN,EGZe,EVdgFlE,CUc3E2C,EHYpBuB,AGTT,EHS8BC,AP1B+EpE,EO0BpEqE,EAAahB,GAAuB,AGTpEqD,EHSqDrD,AP1B8E,AUiB9HA,EHSsDjC,CGR9D0F,IAAAA,EAAI,CAAC,CHeX,SAAS3C,APjCsHjE,CUkBxG,CHeOoE,GAKvB,IAJDC,CPlCyL,EUkB5J,CHgB7BA,CNvCS,CMuCA,GACTC,EAA0B,ENxCjB,CMwCEF,AGjB8B,EHiBxBlD,IPnC2IlB,CCLnJ,EM2CJW,EAAI,CGnBTkG,CHmBYlG,CGnBR,CHmBY2D,APtCqJzE,AUmBhK,EHmBqBc,GAAK,EAAG,CAChC4D,GGpBe,CHoBfA,EAAIH,EAAMzD,CPvC2LX,EOuCtL,GGpBY,EHoBLW,EAAI,APvCoLd,GOuC/K,IAC/B2E,AGrBuC,EHqBjC3B,OPxCwN9C,CUmB3K,CHiB5C,GPpC4NC,QUqBrO,EVpBFC,CUoBmB,CVpBX,IOuCkBwE,APvCdvE,OOuCqBqE,IAAM,APvChB,CUoBdpB,CHmBkC,CGnBd,CVnBlB,AUoBPa,EHcO,EGdPA,EAAMf,GVpBU9C,IAClB,EUmBiB+C,EVnBhBrD,EACG,EOoCoD4E,IPpCpD,GOoC+D,CPpC3DrE,EOoCuDmE,GAAW,AGlBtCpB,CVlBtB,GOqChBkB,AGjBAlB,EHiBOvC,AGjBC,GAEH,EHeO4D,EGfP,CHkBAH,GGlBI1D,EAAI,EHkBR0D,AGlBW1D,EHyBpB,AGzBwBqD,EAAI9C,OHyBnBwD,EAAgBC,AGzBahE,EAChCwC,CHyBG,CGzBGvC,KAAKoD,CHyByB,CGzBrBZ,GHyBXuB,EAAe,KAAO,CGzBAhE,EHyBK,GAAU,EAO/C,EG9BcmB,MAAMgF,CH8BX5C,EAAWK,EAAGK,GAErBL,AGhC0BpB,EHgCxByB,GAAO,AG9BPzB,EAAQrB,EH8BK,IG9BCiF,CH8BOnC,EAAM,GAC7BL,EAAEG,EAAgBE,AG/BQ9B,GH+BD,GAAK8B,AG/BEoC,CVxBzBnH,CO6DF,GGrCgCsD,CHgCjC0B,EPxDGhF,CU2BPsD,CH6BI0B,APxDmB5E,CU2BjBW,CH6BE,IG7BG,KAKN,EHyBDiB,EG7BAoF,CH6BK,GG7BLA,EAAI9D,EAAMjC,GH8BV4D,GAAK,CG9Bc,EAAI,EACvBoC,EAAIC,IH8BJpC,CG9BSqC,CH8BL,IG9BUH,EAAI,IHgCbtG,AG/BL0G,EH+BS,AG/BL,EH+BQ1G,EAAI4D,AG/BRzC,EH+BUZ,IG/BJgG,GH+BYvG,AG7BrB2G,EAAK,CH6BqB,CG7BlBA,EH6BsB,AG7BjBJ,CH8BhBlC,GG9BqBsC,CH8BrBtC,CG9ByB,CH8BlBH,AG3BN,EH4BDI,EAAOpD,AG9BPd,EH+BAmE,EAAOJ,AG/BP/D,EHgCAoE,AGhCM,EHgCCJ,EACXF,AGjCca,EHiCVN,EAAMP,EAAGhD,EAAGiD,EAAGC,EAAGR,AGjCI,EHiCF5D,EG/Bf4G,CH+BmB,CG/Bf,EH+BmB,AG/BhBA,EAAI,KAAMA,EACxBxG,EH+BFgE,AG/BMwC,EH+BFnC,CG/BOjC,CH+BD4B,CG/BY,CH+BTF,EAAGhD,AG/BCyF,EH+BExC,AG/BY,EH+BTP,AG/BKgD,EH+BH5G,EAAI,AG/BS,GH+BL,AG/BUwC,EAAW,EH+BhB,CG/BWmE,EAAc,EAAJC,EAAQ,IHgClEzC,AGhCwE,EHgCpEM,CGhCyEjC,CHgCnE2B,CGhC8E,CHgC3EC,EAAGF,AGhCmEyC,EHgChEzF,AGhC8E,EHgC3E0C,AGhCuEgD,EHgCrE5G,AGhC6E,EHgCzE,EGhC+E,CHgC3E,CGhC+EwC,EHgC3E,AGhCsF,GAALmE,EAAc,EAAJC,EAAQ,EHiCvI1F,CG9BAwF,CH8BIjC,CG9BFkC,CH8BQzF,EAAGiD,AG9BL/D,EH8BQgE,AG3BlBsC,EH2BqBxC,AG3BnBqC,EH2BsB3C,AG3BlB,EH2BoB5D,CG3BjB,CH2BqB,GAAI,AG3BE,GAApBwC,CH2BuB,CG3BjBjC,OAAS,GAASiG,CH4BtCtC,EAAIO,EAAMP,AG5BiC2C,EH4B9B3F,EAAGiD,AG5B+B,EH4B5BC,AG5B+B,EH4B5BR,EAAE5D,AG3B1B0G,EH2B8B,AG3B5BH,EAAI,CH2B4B,EG3BzB,CH2B6B,GG3BvBC,KAAKM,GH4BlB1C,EAAIK,CG5BoBiC,CH4BdtC,CG5BgBmC,CH4BbrC,CG5BiB,CH4BdhD,EAAGiD,AG5Bc,EH4BXP,EAAE5D,CG3B1B0G,CH2B8B,CG3B5BH,EH2BgC,AG3B5B,GH2BgC,AG3B7B,IAA2B,GAApB/D,EAAMjC,GH4BpB4D,EAAIM,EAAMN,AG5BmB,EH4BhBC,CG5ByB,CH4BtBF,EAAGhD,EAAG0C,EAAE5D,EAAI,EG1BzB,CH0B6B,GG1B7B,CH0BkC,GG1B9B+G,EAAM,EAAGA,EAAMR,GH2BtBrF,CG3B2B6F,CH2BvBtC,CG3B4B,CH2BtBvD,AGxBL,EHwBQiD,EAAGC,AG1BZ4C,EH0Be9C,EAAGN,AG1BlBoD,EH0BoBhH,AG1BhB,EH0BoB,EG1BhB+E,CH0BoB,IAAK,OG1Bb,GH2BxBb,CGzBSuB,CHyBLhB,CGzBS,CHyBHP,CGzBMuB,CHyBHvE,CGzBO,CHyBJiD,EAAGC,EAAGR,AGzBI6B,EHyBFzF,AGxBtBgH,EHwB0B,AGxBxBvB,GHwB4B,AGxBvBiB,EHwB0B,AGxBxBK,GAAKtB,GAGX,IAAA,EHsBLrB,EAAIK,AGtBKwC,EHsBC7C,AGtBI,EHsBDF,CGtBK+C,CHsBF/F,CGtBO,CHsBJiD,EAAGP,EAAE5D,AGtBKiH,EHsBD,AGrB1BD,EAAEC,CHqB4B,EGrBtBjB,EHqB2B,AGrBtBgB,EAAEC,EAAK,GAAKD,EAAEC,EAAK,CHsBlC9C,EAAIM,AGtBmCuC,EHsB7B7C,AGtB+B8C,EHsB5B7C,AGtBiC,EHsB9BF,EAAGhD,AGtBiC8F,EHsB9BpD,AGtBgCqD,EHsB9BjH,AGtBmC,EHsB/B,EGtBoC,EHsB/B,CGb5B,GHaiC,CGnBlCkE,IAAAA,EHoBJhD,AGpBQgF,EHoBJzB,AGpBM,EHoBAvD,CGnBNA,CHmBSiD,CGnBL+B,CHmBQ9B,CGnBN,CHmBSF,EAAGN,AGlBlBO,EHkBoBnE,AGlBhBkG,EHkBoB,AGlBlB,GACN9B,CHiB6B,CGjBzB8B,EAAE,CHiB4B,EGhBlCgB,EAAIhB,EAAE,GAEDiB,EAAM,CHefjD,CGfkBiD,CHed1C,CGfoB,CHedP,EAAGhD,EAAGiD,AGfcgD,EHeX/C,AGfgB,CAC7BoB,CHcgB5B,EAAE5D,CGdlBwF,CHcsB,CGdlBgB,GHcuB,EAAG,AGdrBM,MAAMK,EAAM,IHe3B/C,AGdMgD,EHcF3C,AGdMuB,EHcA5B,AGdKF,EHcFA,AGdK,EHcFhD,CGdO4E,CHcJ3B,CGdMqB,CHcH5B,CGdM1C,CHcJlB,CGdOmE,CHcH,CGdMC,GHcD,AGdM8C,EAAIjB,EHcL,AGdOT,GAAKwB,EAAEG,KHepDhD,AGf6D,EHezDM,AGdFyC,EHcQ/C,AGdJC,EHcOA,AGbXA,EHacF,AGbVC,EHaajD,AGZjBiD,EHYoBP,AGZhBoC,EHYkBhG,AGZbkB,EHYiB,AGZd,IHYmB,EGZX,EHYgB,AGXpCA,EAAIgD,EACJA,EAAIkD,EAGNlB,EAAE,EHSFhC,CGTOgC,CHSHxB,CGTK,CHSCR,EADVhD,AGRcgD,EHQVO,EAAMvD,AGRU,EHQPiD,AGPb+B,EHOgB9B,AGPd,EHOiBF,CGPZgC,CHOetC,CGPb,CHOe5D,EAAI,AGPdkB,IHOmB,AGPb,EACpBgF,CHMqC,CGNnC,GAAKA,EAAE,GAAK/B,GHOEA,CGPI,CHODC,CGNnB8B,CHMsBtC,CGNpB,CHMsB5D,EAAI,AGNrBkG,EAAE,CHMuB,EGNlB9B,CHMsB,GGNhB,EACpB8B,EAAE,GAAKA,CHMP9B,CGNS,CHMLM,EAAMN,AGNI8C,EHMDhD,EAAGhD,AGNI,EHMDiD,AGHd,EHGiBP,EAAE5D,EAAI,AGHvB,CAACkG,EHG0B,AGHxB,GHG4B,CGHtB,GAAK,IAAMA,EAAE,EHI3B/B,EAAIO,AGJ6B,EHIvBP,CGJ4B,CHIzBC,EAAGF,CGJ4BgC,CHIzBhF,CGJ2B,CHIxB0C,EAAE5D,CGJ4B,CHIxB,CGJ4B,GHIvB,CGJoC,EHIhC,EGJyBkG,EAAE,GAAWA,EAAE,EHK7EhF,EAAIwD,AGL+E,EHKzExD,CGL8E,CHK3EiD,EAAGC,CGL8E8B,CHK3EhC,CGL6E,CHK1EN,EAAE5D,CGL8E,EHK1E,CGL+E,GHK1E,CGLgFkG,EAAE,IAAM,EAAI,EHM7HhC,EAAIQ,AGNsI,EHMhIR,EAAGhD,AGNsHgF,EHMnH/B,AGNqH,EHMlHC,CGN6H8B,CHM1HtC,CGN4H,CHM1H5D,EAAI,CGN4H,EHMxH,CGN6H,EHMzH,EGN+HkG,EAAE,IAAM,GHO3K9B,AGPgL,EHO5KM,EAAMN,AGP4K8B,EHOzKhC,AGP2K,EHOxKhD,EAAGiD,AGP2K,EHOxKP,AGP4K,EHO1K5D,EAAI,AGPmL,IHO9K,AGPuKkG,EHOpK,AGPsK,GAAWA,EAAE,IAAM,CHQ7N/B,EAAIO,AGR8N,EHQxNP,EAAGC,AGR2N8B,EHQxNhC,AGR0N,EHQvNhD,EAAG0C,AGR0N,EHQxN5D,CGR6N,CHQzN,GGR+NkG,CHQ1N,CGR4N,GHQvN,CGR6N,EAAI,IAAa,IHSpRhF,AGT6QgF,EHSzQxB,AGT2Q,EHSrQxD,CGTgRgF,CHS7Q/B,CGT+Q,CHS5QC,EAAGF,CGT+Q,CHS5QN,EAAE5D,AGT+Q,EHS3Q,EGTiRkG,CHS7Q,CGT+Q,GHS1Q,CGTgR,G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","file":"main.12fc1ae2.js","sourceRoot":"..","sourcesContent":["import {ColumnCharacter, numberToColumn, Square} from \"./square\";\n\nexport function columnNumberToCharacter(columnNumber: Square.Number): ColumnCharacter {\n  return numberToColumn[columnNumber] as ColumnCharacter;\n}\n","import {columnNumberToCharacter} from \"./helper\";\n\nexport const SQUARE_ID_SEPARATOR = \"-\";\n\nexport type TransformParams = { row?: number | undefined, col?: number | undefined };\n\nexport class Square {\n  readonly column: Column;\n  readonly row: Row;\n\n  private constructor(column: Column, row: Row) {\n    this.column = column;\n    this.row = row;\n  }\n\n  static at(column: ColumnCharacter | Square.Number | Column, row: Square.Number | Row): Square {\n    let newColumn: Column;\n    let newRow: Row;\n\n    if (Column.isValidColumnCharacter(column)) {\n      newColumn = Column.fromCharacter(column);\n    } else if (Column.isValidColumnNumber(column)) {\n      newColumn = Column.fromCharacter(columnNumberToCharacter(column));\n    } else {\n      newColumn = column;\n    }\n\n    if (row instanceof Row) {\n      newRow = row;\n    } else {\n      newRow = Row.fromNumber(row);\n    }\n    return new Square(newColumn, newRow);\n  }\n\n  static fromAlgebraicNotation(notation: string): Square {\n    if(notation.length !== 2){\n      throw new Error(`${notation} is not valid chess algebraic notation square!`)\n    }\n    const columnNumber = notation.charAt(0) as ColumnCharacter;\n    const rowNumber = notation.charAt(1);\n    return new Square(Column.fromCharacter(columnNumber), Row.fromNumber(parseInt(rowNumber) as Square.Number));\n  }\n\n  static withId(squareId: Square[\"id\"]): Square {\n    const [column, row] = squareId.split(SQUARE_ID_SEPARATOR);\n    return Square.at(column as ColumnCharacter, Number.parseInt(row) as Square.Number);\n  }\n\n  get col(): Column {\n    return this.column;\n  }\n\n  atColumn(column: Column): Square {\n    return new Square(column, this.row);\n  }\n\n  atRow(row: Row): Square {\n    return new Square(this.column, row);\n  }\n\n  atX(x: Square.Number): Square {\n    return this.atColumn(Column.fromCharacter(columnNumberToCharacter(x)));\n  }\n\n  atY(y: Square.Number): Square {\n    return this.atRow(Row.fromNumber(y));\n  }\n\n  transform(props: TransformParams): Square | undefined {\n    let result: Square | undefined = this;\n    if (props.row) {\n      const rowNumber = this.row.number + props.row;\n      if (Row.isValidRowNumber(rowNumber)) {\n        result = result.atY(rowNumber);\n      } else {\n        return undefined;\n      }\n    }\n    if (props.col) {\n      const columnNumber = this.column.number + props.col;\n      if (Column.isValidColumnNumber(columnNumber)) {\n        result = result.atX(columnNumber);\n      } else {\n        return undefined;\n      }\n    }\n    return result;\n  }\n\n  difference(anotherSquare: Square): TransformParams {\n    return {col: anotherSquare.column.number - this.column.number, row: anotherSquare.row.number - this.row.number};\n  }\n\n  get id(): string {\n    return `${this.column.character}${SQUARE_ID_SEPARATOR}${this.row.number}`;\n  }\n\n  get algebraicNotation(): string {\n    return `${this.column.character}${this.row.number}`;\n  }\n\n  equals(square: Square | undefined): boolean {\n    if (!square) {\n      return false;\n    }\n    return this.algebraicNotation === square.algebraicNotation;\n  }\n\n\n}\n\n/*\nMore about this:\nhttps://stackoverflow.com/questions/45251664/typescript-derive-union-type-from-tuple-array-values\n */\nexport namespace Square {\n  export type Number = typeof availableNumber[number]\n  export const availableNumber = [1, 2, 3, 4, 5, 6, 7, 8] as const;\n  export const lowercaseAvailableColumns = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"] as const;\n  export const uppercaseAvailableColumns = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"] as const;\n}\n\nexport class Row {\n\n  readonly number: Square.Number;\n\n  static fromNumber(rowNumber: Square.Number): Row {\n    return new Row(rowNumber);\n  }\n\n  private constructor(rowNumber: Square.Number) {\n    this.number = rowNumber;\n  }\n\n  static isValidRowNumber(rowNumber: any): rowNumber is Square.Number {\n    return Square.availableNumber.includes(Number.parseInt(rowNumber) as Square.Number);\n  }\n\n}\n\n\nexport type ColumnCharacter = typeof Square.uppercaseAvailableColumns[number];\n\nexport const columnToNumber = {\n  \"A\": 1,\n  \"B\": 2,\n  \"C\": 3,\n  \"D\": 4,\n  \"E\": 5,\n  \"F\": 6,\n  \"G\": 7,\n  \"H\": 8\n}\n\nexport const numberToColumn = {\n  1: \"A\",\n  2: \"B\",\n  3: \"C\",\n  4: \"D\",\n  5: \"E\",\n  6: \"F\",\n  7: \"G\",\n  8: \"H\"\n}\n\nexport class Column {\n\n  readonly character: ColumnCharacter;\n\n  private constructor(columnCharacter: ColumnCharacter) {\n    this.character = columnCharacter;\n  }\n\n  static fromCharacter(columnCharacter: ColumnCharacter): Column {\n    return new Column(columnCharacter.toUpperCase() as ColumnCharacter);\n  }\n\n  static isValidColumnCharacter(columnCharacter: any): columnCharacter is ColumnCharacter {\n    return typeof columnCharacter === \"string\" && Square.uppercaseAvailableColumns.includes(columnCharacter.toUpperCase() as ColumnCharacter);\n  }\n\n  static isValidColumnNumber(columnNumber: any): columnNumber is Square.Number {\n    return Square.availableNumber.includes(columnNumber);\n  }\n\n  get number(): number {\n    return columnToNumber[this.character]\n  }\n\n}\n","export enum Side {\n  WHITE = \"white\",\n  BLACK = \"black\"\n}\n\nexport namespace Side {\n  export function values(): Side[] {\n    return [Side.WHITE, Side.BLACK];\n  }\n\n  export function findByString(s: string): Side | undefined {\n    const lowerCased = s.toLowerCase();\n    return values().find((value: Side) => lowerCased === value.toLowerCase() || value[0] === lowerCased.toLowerCase()[0]);\n  }\n\n  export function byName(name: \"black\" | \"white\"): Side {\n    return findByString(name)!;\n  }\n\n  export function another(side: Side): Side {\n    return side === Side.WHITE ? Side.BLACK : Side.WHITE;\n  }\n\n}\n","import { Square } from \"../board\";\n\nexport class PieceMove {\n\n    readonly type: MoveType;\n    readonly square: Square;\n\n    private constructor(type: MoveType, square: Square) {\n        this.type = type;\n        this.square = square;\n    }\n\n    static attackAt(square: Square): PieceMove {\n        return new PieceMove(MoveType.ATTACK, square);\n    }\n\n    static normalAt(square: Square): PieceMove {\n        return new PieceMove(MoveType.NORMAL, square);\n    }\n}\n\nexport enum MoveType {\n    NORMAL = \"normal\",\n    ATTACK = \"attack\"\n}\n","import {Side} from \"./side\";\nimport {MoveType, PieceMove} from \"./piece-move\";\nimport {ChessBoard, Square, TransformParams} from \"../board\";\nimport {PieceName} from \"./piece-name\";\n\nexport abstract class Piece {\n\n  readonly side: Side;\n\n  protected constructor(side: Side) {\n    this.side = side;\n  }\n\n  protected abstract getPatternSquares(chessBoard: ChessBoard, currentSquare: Square): Square[]\n\n  getAvailableMoves(chessBoard: ChessBoard, currentSquare: Square): PieceMove[] {\n    return this.getPiecePatternMoves(chessBoard, currentSquare)\n      .filter(this.cannotExposeKingOnAttack(chessBoard, currentSquare));\n  }\n\n  protected getPiecePatternMoves(chessBoard: ChessBoard, currentSquare: Square): PieceMove[] {\n    return this.getPatternSquares(chessBoard, currentSquare)\n        .map(moveSquare => this.toPieceMove(chessBoard)(moveSquare));\n  }\n\n  canMove(chessBoard: ChessBoard, currentSquare: Square): boolean {\n    return this.getAvailableMoves(chessBoard, currentSquare).length > 0;\n  }\n\n  getAttackMoves(chessBoard: ChessBoard, currentSquare: Square): PieceMove[] {\n    return this.getAvailableMoves(chessBoard, currentSquare)\n      .filter(it => it.type == MoveType.ATTACK);\n  }\n\n  getAttackSquares(chessBoard: ChessBoard, currentSquare: Square): Square[] {\n    return this.getAttackMoves(chessBoard, currentSquare)\n      .map(it => it.square);\n  }\n\n  getNonAttackMoves(chessBoard: ChessBoard, currentSquare: Square): PieceMove[] {\n    return this.getAvailableMoves(chessBoard, currentSquare)\n      .filter(it => it.type !== MoveType.ATTACK);\n  }\n\n  canAttackOn(chessBoard: ChessBoard, currentSquare: Square, squareToAttack: Square): boolean {\n    return this.getAttackSquares(chessBoard, currentSquare)\n      .some(it => it.equals(squareToAttack));\n  }\n\n  withinPatternOn(chessBoard: ChessBoard, currentSquare: Square, squareToAttack: Square): boolean {\n    return this.getPatternSquares(chessBoard, currentSquare)\n      .some(it => it.equals(squareToAttack));\n  }\n\n  get name(): PieceName {\n    return this.constructor.name as PieceName;\n  }\n\n  isWhite(): boolean {\n    return this.side === Side.WHITE;\n  }\n\n  isBlack(): boolean {\n    return this.side === Side.BLACK;\n  }\n\n  isOpponentOf(anotherPiece: Piece): boolean {\n    return this.side !== anotherPiece.side;\n  }\n\n  protected canAttackOnSquare(chessBoard: ChessBoard, square: Square): boolean {\n    return chessBoard.squareIsOccupied(square) && chessBoard.pieceOn(square)!.isOpponentOf(this);\n  };\n\n  protected toPieceMove(chessBoard: ChessBoard): (movableSquare: Square) => PieceMove {\n    return (movableSquare: Square) =>\n      this.canAttackOnSquare(chessBoard, movableSquare) ? PieceMove.attackAt(movableSquare) : PieceMove.normalAt(movableSquare);\n  }\n\n  equals(anotherPiece: Piece | undefined): boolean {\n    return anotherPiece !== undefined && anotherPiece.side === this.side && anotherPiece.name === this.name;\n  }\n\n  protected cannotExposeKingOnAttack(chessBoard: ChessBoard, currentSquare: Square): (it: PieceMove) => boolean {\n    return (it: PieceMove) => {\n      const squareAfterMove = it.square;\n      const chessBoardAfterMove = chessBoard.afterMove(currentSquare, squareAfterMove);\n      const allyKingAfterMoveSquare = chessBoardAfterMove.squareOfKing(this.side);\n      return allyKingAfterMoveSquare ? !withinEnemyPatternMoves(this.side, chessBoardAfterMove, allyKingAfterMoveSquare) : true;\n    };\n  }\n\n}\n\nexport type MoveDelta = { column: number, row: number }\n\nfunction withinEnemyPatternMoves(side: Side, chessBoard: ChessBoard, onSquare: Square): boolean {\n  return chessBoard.piecesOnSquares\n      .filter(pieceOnSquare => pieceOnSquare.piece.side !== side)\n      .some(pieceOnSquare => pieceOnSquare.piece.withinPatternOn(chessBoard, pieceOnSquare.square, onSquare))\n}\n\nexport function patternMoves(side: Side, chessBoard: ChessBoard, fromSquare: Square, [firstMove, ...otherMoves]: MoveDelta[]): Square[] {\n  if (!firstMove) {\n    return []\n  }\n  const moveSquare = fromSquare.transform({col: firstMove.column, row: firstMove.row})\n  if (!moveSquare || isObstruction(side, chessBoard, moveSquare)) {\n    return patternMoves(side, chessBoard, fromSquare, otherMoves);\n  }\n  return [moveSquare, ...patternMoves(side, chessBoard, fromSquare, otherMoves)]\n}\n\nexport function lineMoves(side: Side, chessBoard: ChessBoard, fromSquare: Square, vector: TransformParams): Square[] {\n  const nextSquare = fromSquare.transform(vector)\n  if (!nextSquare) {\n    return []\n  }\n  if (nextSquare && canCapturePiece(side, chessBoard, nextSquare)) {\n    return [nextSquare];\n  }\n  if (nextSquare && isObstruction(side, chessBoard, nextSquare)) {\n    return [];\n  }\n  return [nextSquare, ...lineMoves(side, chessBoard, nextSquare, vector)];\n}\n\nexport function canCapturePiece(side: Side, chessBoard: ChessBoard, square: Square): boolean {\n  const pieceOnSquare = chessBoard.pieceOn(square)\n  return pieceOnSquare !== undefined && pieceOnSquare.side !== side\n}\n\nfunction isObstruction(side: Side, chessBoard: ChessBoard, square: Square): boolean {\n  const pieceOnSquare = chessBoard.pieceOn(square)\n  return pieceOnSquare !== undefined && pieceOnSquare.side === side\n}\n","import {lineMoves, Piece} from \"./piece\";\nimport {Side} from \"./side\";\nimport {ChessBoard, Square} from \"../board\";\n\nexport class Bishop extends Piece {\n\n  constructor(side: Side) {\n    super(side);\n  }\n\n  getPatternSquares(chessBoard: ChessBoard, currentSquare: Square): Square[] {\n    return [\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: -1, col: -1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: -1, col: 1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: 1, col: 1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: 1, col: -1})\n    ]\n  }\n\n}\n","import {lineMoves, Piece} from \"./piece\";\nimport {ChessBoard, Square} from \"../board\";\nimport {Side} from \"./side\";\n\nexport class Rook extends Piece {\n\n  constructor(side: Side) {\n    super(side);\n  }\n\n  getPatternSquares(chessBoard: ChessBoard, currentSquare: Square): Square[] {\n    return [\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: -1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: 1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {col: -1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {col: 1})\n    ]\n  }\n\n}\n","import {MoveDelta, patternMoves, Piece} from \"./piece\";\nimport {Side} from \"./side\";\nimport {ChessBoard, PieceOnSquare, Square} from \"../board\";\nimport {PieceMove} from \"./piece-move\";\nimport {Rook} from \"./rook\";\n\nexport class King extends Piece {\n\n  static MOVES_PATTERN: MoveDelta[] = [\n    {\n      column: -1,\n      row: -1\n    },\n    {\n      column: -1,\n      row: 0\n    },\n    {\n      column: -1,\n      row: 1\n    },\n    {\n      column: 0,\n      row: 1\n    },\n    {\n      column: 1,\n      row: 1\n    },\n    {\n      column: 1,\n      row: 0\n    },\n    {\n      column: 1,\n      row: -1\n    },\n    {\n      column: 0,\n      row: -1\n    },\n  ];\n\n  constructor(side: Side) {\n    super(side);\n  }\n\n  getPatternSquares(chessBoard: ChessBoard, currentSquare: Square): Square[] {\n    return patternMoves(this.side, chessBoard, currentSquare, King.MOVES_PATTERN);\n  }\n\n  getAvailableMoves(chessBoard: ChessBoard, currentSquare: Square): PieceMove[]{\n    return this.getPatternSquares(chessBoard, currentSquare)\n        .map(moveSquare => this.toPieceMove(chessBoard)(moveSquare))\n        .filter(this.cannotExposeKingOnAttack(chessBoard, currentSquare))\n        .concat(castlingPattern(this.side, chessBoard, currentSquare).map(moveSquare => this.toPieceMove(chessBoard)(moveSquare)))\n  }\n\n  isInCheck(chessBoard: ChessBoard, currentSquare: Square): boolean {\n    return isKingInCheck(this.side, chessBoard, currentSquare)\n  }\n\n  isCheckmate(chessBoard: ChessBoard, currentSquare: Square): boolean {\n    return this.isInCheck(chessBoard, currentSquare) && !chessBoard.canMoveOn(this.side)\n  }\n}\n\nexport function castlingPattern(side: Side, chessBoard: ChessBoard, currentSquare: Square): Square[] {\n  const result: Square[] = []\n  if (kingHasMoved(side, chessBoard)) {\n    return []\n  }\n  if (notMovedRookOnQueenSide(side, chessBoard) && queenSideSquaresEmpty(currentSquare, chessBoard) && !queenSideInCheck(currentSquare, chessBoard)) {\n    result.push(currentSquare.transform({col: -2})!)\n  }\n  if (notMovedRookOnKingSide(side, chessBoard) && kingSideSquaresEmpty(currentSquare, chessBoard) && !kingSideInCheck(currentSquare, chessBoard)) {\n    result.push(currentSquare.transform({col: +2})!)\n  }\n  return result;\n}\n\nfunction queenSideInCheck(kingSquare: Square, chessBoard: ChessBoard): boolean {\n  return [{col: 0}, {col: -1}, {col: -2}]\n      .map(it => kingSquare.transform(it))\n      .some(it => it && chessBoard.afterMove(kingSquare, it).isKingChecked())\n}\n\nfunction kingSideInCheck(kingSquare: Square, chessBoard: ChessBoard): boolean {\n  return [{col: 0}, {col: +1}, {col: +2}]\n      .map(it => kingSquare.transform(it))\n      .some(it => it && chessBoard.afterMove(kingSquare, it).isKingChecked())\n}\n\nfunction notMovedRookOnQueenSide(side: Side, chessBoard: ChessBoard): Square | undefined {\n  const rookSquares = chessBoard.squaresWith(new Rook(side))\n  return rookSquares.find(it => it.algebraicNotation === (side === Side.WHITE ? \"A1\" : \"A8\"))\n}\n\nfunction queenSideSquaresEmpty(kingSquare: Square, chessBoard: ChessBoard): boolean {\n  return [{col: -1}, {col: -2}, {col: -3}]\n      .map(it => kingSquare.transform(it))\n      .every(it => it && !chessBoard.squareIsOccupied(it))\n}\n\nfunction kingSideSquaresEmpty(kingSquare: Square, chessBoard: ChessBoard): boolean {\n  return [{col: 1}, {col: 2}]\n      .map(it => kingSquare.transform(it))\n      .every(it => it && !chessBoard.squareIsOccupied(it))\n}\n\nfunction notMovedRookOnKingSide(side: Side, chessBoard: ChessBoard): Square | undefined {\n  const rookSquares = chessBoard.squaresWith(new Rook(side))\n  return rookSquares.find(it => it.algebraicNotation === (side === Side.WHITE ? \"H1\" : \"H8\"))\n}\n\nfunction kingHasMoved(side: Side, chessBoard: ChessBoard) {\n  const kingSquare = chessBoard.squareOfKing(side);\n  const kingStartingSquare = Square.fromAlgebraicNotation(side === Side.WHITE ? \"E1\" : \"E8\");\n  return !kingSquare || !kingSquare.equals(kingStartingSquare);\n}\n\n/**\n * Jeśli król jest atakowany przez bierkę (bierki) przeciwnika, mówi się, że jest w szachu lub jest szachowany.\n * W takiej sytuacji gracz ma obowiązek bronić króla (nie może wykonać innego ruchu) przez przesunięcie go na inne pole,\n * zbicie atakującej bierki przeciwnika lub przesłonięcie ataku własną bierką.\n * W odróżnieniu od innych bierek król nie może szachować króla przeciwnika.\n * @param side - strona dla której należy sprawdzić czy król jest szachowany\n * @param chessBoard - stan szachownicy do sprawdzenia czy król jest na niej szachowany\n * @param kingSquare - pole, na którym stoi aktualnie król\n */\nfunction isKingInCheck(side: Side, chessBoard: ChessBoard, kingSquare: Square): boolean {\n  const isNotKing = (pieceOnSquare: PieceOnSquare) => pieceOnSquare.piece.name !== \"King\";\n  const isEnemyPiece = (pieceOnSquare: PieceOnSquare) => pieceOnSquare.piece.side !== side;\n  const isStandingOnAnotherPieceAttackSquare = (pieceOnSquare: PieceOnSquare) =>\n      pieceOnSquare.piece.canAttackOn(chessBoard, pieceOnSquare.square, kingSquare);\n\n  return chessBoard.piecesOnSquares\n      .filter(isEnemyPiece)\n      .filter(isNotKing)\n      .some(isStandingOnAnotherPieceAttackSquare)\n}\n","import {MoveDelta, patternMoves, Piece} from \"./piece\";\n\nimport {Square} from \"../board\";\nimport {ChessBoard} from \"../board\";\nimport {Side} from \"./side\";\n\nexport class Knight extends Piece {\n\n  static MOVES_PATTERN: MoveDelta[] = [\n    {\n      column: 2,\n      row: 1\n    },\n    {\n      column: 1,\n      row: 2\n    },\n    {\n      column: 1,\n      row: -2\n    },\n    {\n      column: 2,\n      row: -1\n    },\n    {\n      column: -2,\n      row: 1\n    },\n    {\n      column: -1,\n      row: 2\n    },\n    {\n      column: -1,\n      row: -2\n    },\n    {\n      column: -2,\n      row: -1\n    }\n  ];\n\n  constructor(side: Side) {\n    super(side);\n  }\n\n  getPatternSquares(chessBoard: ChessBoard, currentSquare: Square): Square[] {\n    return patternMoves(this.side, chessBoard, currentSquare, Knight.MOVES_PATTERN);\n  }\n}\n","import {canCapturePiece, MoveDelta, Piece} from \"./piece\";\nimport {Side} from \"./side\";\nimport {ChessBoard, Square} from \"../board\";\nimport {PieceMove} from \"./piece-move\";\n\nexport class Pawn extends Piece {\n\n  constructor(side: Side) {\n    super(side);\n  }\n\n  getPatternSquares(chessBoard: ChessBoard, currentSquare: Square): Square[] {\n    return pawnPattern(this.side, chessBoard, currentSquare)\n  }\n\n  protected getPiecePatternMoves(chessBoard: ChessBoard, currentSquare: Square): PieceMove[] {\n    const patternSquaresMoves = super.getPiecePatternMoves(chessBoard, currentSquare);\n    const enPassantCaptureSquares = pawnEnPassantCaptureMoves(this.side, currentSquare, chessBoard);\n    const enPassantAttackMoves = enPassantCaptureSquares.map(square => PieceMove.attackAt(square))\n    return patternSquaresMoves.concat(enPassantAttackMoves);\n  }\n\n  isOnTheOppositeEdgeOfTheBoard(currentSquare: Square): boolean {\n    return currentSquare.row.number === (this.isWhite() ? 8 : 1);\n  }\n\n  static isPawn(piece: Piece): piece is Pawn {\n    return piece.name === \"Pawn\";\n  }\n\n}\n\nfunction pawnPattern(side: Side, chessBoard: ChessBoard, currentSquare: Square): Square[] {\n  const delta = side === Side.WHITE ? 1 : -1\n  const normalMovesPattern = pawnOnStartingRow(side, currentSquare) ? [\n    {\n      column: 0,\n      row: delta\n    },\n    {\n      column: 0,\n      row: delta * 2\n    }\n  ] : [\n    {\n      column: 0,\n      row: delta\n    }\n  ];\n  const captureMovesPattern = [\n    {\n      column: 1,\n      row: delta\n    },\n    {\n      column: -1,\n      row: delta\n    }\n  ];\n  const normalMoves = pawnNormalMoves(chessBoard, currentSquare, normalMovesPattern)\n  const captureMoves = pawnCaptureMoves(side, currentSquare, chessBoard, captureMovesPattern);\n  return [...normalMoves, ...captureMoves];\n}\n\nfunction pawnCaptureMoves(side: Side, currentSquare: Square, chessBoard: ChessBoard, [firstMove, ...otherMoves]: MoveDelta[]): Square[] {\n  if (!firstMove) {\n    return []\n  }\n  const moveSquare = currentSquare.transform({col: firstMove.column, row: firstMove.row})\n  return moveSquare && canCapturePiece(side, chessBoard, moveSquare)\n      ? [moveSquare, ...pawnCaptureMoves(side, currentSquare, chessBoard, otherMoves)]\n      : pawnCaptureMoves(side, currentSquare, chessBoard, otherMoves)\n}\n\nfunction pawnNormalMoves(chessBoard: ChessBoard, currentSquare: Square, [firstMove, ...otherMoves]: MoveDelta[]): Square[] {\n  if (!firstMove) {\n    return []\n  }\n  const moveSquare = currentSquare.transform({col: firstMove.column, row: firstMove.row})\n\n  if (!moveSquare || isPawnObstruction(chessBoard, moveSquare)) {\n    return []\n  }\n  return [moveSquare, ...pawnNormalMoves(chessBoard, currentSquare, otherMoves)]\n}\n\nfunction isPawnObstruction(chessBoard: ChessBoard, square: Square): boolean {\n  const pieceOnSquare = chessBoard.pieceOn(square)\n  return pieceOnSquare !== undefined\n}\n\nfunction pawnOnStartingRow(side: Side, currentSquare: Square): boolean {\n  if (side === Side.WHITE) {\n    return currentSquare.row.number === 2;\n  } else if (side === Side.BLACK) {\n    return currentSquare.row.number === 7;\n  } else {\n    return false;\n  }\n}\n\n/**\n * TODO: Extract this logic somehow\n * https://www.chess.com/pl/article/view/bicie-w-przelocie-specjalne-ruchy-w-szachach\n * https://en.wikipedia.org/wiki/En_passant\n */\nfunction pawnEnPassantCaptureMoves(side: Side, currentSquare: Square, chessBoard: ChessBoard): Square[] {\n  const lastMove = chessBoard.lastMove;\n  if (!lastMove) {\n    return [];\n  }\n  const enPassantAvailable = lastMove.piece.name === \"Pawn\"\n      && lastMove.piece.side !== side\n      && Math.abs(lastMove.from.row.number - lastMove.to.row.number) == 2\n      && Math.abs(currentSquare.column.number - lastMove.to.column.number) == 1\n      && Math.abs(currentSquare.row.number - lastMove.to.row.number) == 0;\n\n  if (!enPassantAvailable) {\n    return [];\n  }\n  const enPassantCaptureSquare = Square.fromAlgebraicNotation(lastMove.to.algebraicNotation).transform({row: lastMove.piece.isWhite() ? -1 : 1});\n  return enPassantCaptureSquare ? [enPassantCaptureSquare] : [];\n}\n","const pieces = ['King', 'Queen', 'Bishop', 'Knight', 'Rook', 'Pawn'] as const;\nconst promotionPieces = ['Queen', 'Bishop', 'Knight', 'Rook'] as const;\n\nexport type PieceName = typeof pieces[number];\n\nexport type PromotionPieceName = typeof promotionPieces[number];\n\nexport function isPromotionPieceName(name: string | undefined): name is PromotionPieceName {\n    return name !== undefined && promotionPieces.map(it => it.toLowerCase()).includes(name.toLowerCase());\n}\n\nexport function isPieceName(name: string | undefined): name is PieceName {\n    return name !== undefined && pieces.map(it => it.toLowerCase()).includes(name.toLowerCase());\n}\n","import {lineMoves, Piece} from \"./piece\";\nimport {ChessBoard, Square} from \"../board\";\nimport {Side} from \"./side\";\n\nexport class Queen extends Piece {\n\n  constructor(side: Side) {\n    super(side);\n  }\n\n  getPatternSquares(chessBoard: ChessBoard, currentSquare: Square): Square[] {\n    return [\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: -1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: 1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {col: -1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {col: 1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: -1, col: -1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: -1, col: 1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: 1, col: 1}),\n      ...lineMoves(this.side, chessBoard, currentSquare, {row: 1, col: -1})\n    ]\n  }\n\n}\n","import {King} from \"./king\";\nimport {Queen} from \"./queen\";\nimport {Bishop} from \"./bishop\";\nimport {Knight} from \"./knight\";\nimport {Rook} from \"./rook\";\nimport {Pawn} from \"./pawn\";\nimport {Side} from \"./side\";\nimport { PieceName } from \"./piece-name\";\nimport {Piece} from \"./piece\";\n\nconst nameToPiece: { [key in PieceName]: (side: Side) => Piece } = {\n  King: (side: Side) => new King(side),\n  Queen: (side: Side) => new Queen(side),\n  Bishop: (side: Side) => new Bishop(side),\n  Knight: (side: Side) => new Knight(side),\n  Rook: (side: Side) => new Rook(side),\n  Pawn: (side: Side) => new Pawn(side)\n};\n\nexport class Pieces {\n    \n  static getBy(name: PieceName, side: Side): Piece {\n    return nameToPiece[name](side)\n  }\n\n}\n","export * from './bishop'\nexport * from './king'\nexport * from './knight'\nexport * from './pawn'\nexport * from './piece'\nexport * from './piece-move'\nexport * from './piece-name'\nexport * from './pieces'\nexport * from './promotion-piece'\nexport * from './queen'\nexport * from './rook'\nexport * from './side'\n","export class AggregateVersion {\n  private readonly TYPE = \"AggregateVersion\";\n\n  private constructor(readonly raw: number) {\n  }\n\n  static of(raw: number): AggregateVersion {\n    if (raw < 0 || !AggregateVersion.isInteger(raw)) {\n      throw new Error(\"Aggregate version number must be integer >= 0!\");\n    }\n    return new AggregateVersion(raw);\n  }\n\n  static new(): AggregateVersion {\n    return new AggregateVersion(0);\n  }\n\n  increase(): AggregateVersion {\n    return new AggregateVersion(this.raw + 1);\n  }\n\n  private static isInteger(n: any) {\n    return n % 1 === 0;\n  }\n}\n","export * from './aggregate-id.valueobject'\nexport * from './aggregate-version.valueobject'\n","import {DomainEvent, EventMetadata} from \"./domain-event\";\nimport {DomainEventId} from \"./domain-event-id.valueobject\";\nimport {AggregateId} from \"../aggregate\";\n\nexport abstract class AbstractDomainEvent<I extends AggregateId = AggregateId, T = any, M extends EventMetadata = EventMetadata> implements DomainEvent<I, T, M> {\n  readonly eventId: DomainEventId;\n  readonly occurredAt: Date;\n  readonly aggregateId: I;\n  readonly data: T;\n  readonly metadata: M\n\n  protected constructor(eventId: DomainEventId, occurredAt: Date, aggregateId: I, data: T, metadata: M) {\n    this.eventId = eventId;\n    this.occurredAt = occurredAt;\n    this.aggregateId = aggregateId;\n    this.data = data;\n    this.metadata = metadata\n  }\n\n  get eventType(): string {\n    return Object.getPrototypeOf(this).constructor.name;\n  }\n\n  abstract get aggregateType(): string;\n\n  enhance<E extends AbstractDomainEvent<I, T, M> = AbstractDomainEvent<I, T, M>>(metadata: M): AbstractDomainEvent<I, T, M> {\n    return {...this, metadata: {...this.metadata, metadata}}\n  }\n}\n","import { AggregateId } from '../aggregate';\nimport { AbstractDomainEvent } from \"./abstract-domain-event\";\nimport { FailureReason } from '../result';\nimport { EventMetadata } from \"./domain-event\";\n\nexport abstract class AbstractFailureDomainEvent<\n  I extends AggregateId = AggregateId,\n  T extends FailureReason = FailureReason,\n  M extends EventMetadata = EventMetadata\n> extends AbstractDomainEvent<I, T, M> {}\n","import { AggregateId } from '../aggregate';\nimport { AbstractDomainEvent } from \"./abstract-domain-event\";\nimport { EventMetadata } from \"./domain-event\";\n\nexport abstract class AbstractSuccessDomainEvent<\n  I extends AggregateId = AggregateId,\n  T = any,\n  M extends EventMetadata = EventMetadata\n> extends AbstractDomainEvent<I, T, M> {\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import { v4 as uuid } from \"uuid\";\n\nexport class CorrelationId {\n  private readonly TYPE = \"CorrelationId\";\n\n  private constructor(readonly raw: string) {\n  }\n\n  static of(raw: string): CorrelationId {\n    return new CorrelationId(raw);\n  }\n\n  static generate(): CorrelationId {\n    return new CorrelationId(uuid());\n  }\n\n  toString(): string {\n    return this.raw;\n  }\n\n  equals(anotherId: CorrelationId | undefined): boolean {\n    return anotherId !== undefined && this.raw === anotherId.raw;\n  }\n}\n","import { v4 as uuid } from \"uuid\";\nimport { CorrelationId } from \"./correlation-id.valueobject\";\nimport { DomainEventId } from \"./domain-event-id.valueobject\";\n\nexport class CausationId {\n  private readonly TYPE = \"CausationId\";\n\n  private constructor(readonly raw: string) {\n  }\n\n  static of(raw: string): CausationId {\n    return new CausationId(raw);\n  }\n\n  toCorrelation(): CorrelationId {\n    return CorrelationId.of(this.raw);\n  }\n\n  static fromEventId(eventId: DomainEventId): CausationId{\n    return CausationId.of(eventId.raw)\n  }\n\n  static generate(): CausationId {\n    return new CausationId(uuid());\n  }\n\n  toString(): string {\n    return this.raw;\n  }\n}\n","import { v4 as uuid } from \"uuid\";\n\nexport class DomainEventId {\n  private readonly TYPE = 'DomainEventId';\n\n  private constructor(readonly raw: string) {}\n\n  static generate(): DomainEventId {\n    return new DomainEventId(uuid());\n  }\n\n  static of(raw: string): DomainEventId {\n    return new DomainEventId(raw);\n  }\n}\n","import { DomainEvent } from \"./domain-event\";\n\nexport class DomainEvents<T extends DomainEvent = DomainEvent> {\n\n  private constructor(private readonly _events: T[]) {\n  }\n\n  static clean<E extends DomainEvent = DomainEvent>(): DomainEvents<E> {\n    return new DomainEvents<E>([]);\n  }\n\n  append(event: T): DomainEvents<T> {\n    return new DomainEvents<T>([...this.toArray(), event])\n  }\n\n  forgetLast(correlated = true): DomainEvents<T> {\n    let eventsAfter = this.toArray();\n    const forgotten = eventsAfter.pop()\n    if(forgotten && correlated){\n      eventsAfter = eventsAfter.filter(it => it.metadata.correlationId.equals(forgotten.metadata.correlationId))\n    }\n    return new DomainEvents<T>(eventsAfter)\n  }\n\n  toArray(): T[] {\n    return [...this._events];\n  }\n\n}\n","export * from './abstract-domain-event'\nexport * from './abstract-failure-domain-event'\nexport * from './abstract-success-domain-event'\nexport * from './causation-id.valueobject'\nexport * from './correlation-id.valueobject'\nexport * from './domain-event'\nexport * from './domain-event-id.valueobject'\nexport * from './domain-events'\n","import { DomainEvent } from '../event';\nimport { AggregateId } from '../aggregate';\nimport { AggregateVersion } from '../aggregate';\nimport { Result } from '../result';\nimport { AbstractFailureDomainEvent } from '../event';\nimport { TimeProvider } from '../time';\n\nconst INTERNAL_EVENTS = Symbol();\n\nexport abstract class AbstractMutableAggregateRoot<I extends AggregateId> {\n  protected id: I | undefined;\n  private readonly [INTERNAL_EVENTS]: DomainEvent[] = [];\n  private readonly timeProvider: TimeProvider;\n  private _committedVersion = AggregateVersion.new();\n  private _currentVersion = AggregateVersion.new();\n\n  protected constructor(timeProvider: TimeProvider) {\n    this.timeProvider = timeProvider;\n  }\n\n  protected get currentDate(): Date{\n    return this.timeProvider.currentDate();\n  }\n\n  getUncommittedEvents(): DomainEvent[] {\n    return this[INTERNAL_EVENTS];\n  }\n\n  clearUncommittedEvents():void {\n    this[INTERNAL_EVENTS].length = 0;\n  }\n\n  loadFromHistory(history: DomainEvent[]):void {\n    history.forEach(event => this.apply(event, true));\n  }\n\n  protected applyAll(events: DomainEvent[], isFromHistory = false): void {\n    events.forEach(event => this.apply(event, isFromHistory));\n  }\n\n  //TODO: Checking for aggregate currentVersion here! Because it can pass wrong command.\n  executeCommand(executor: () => Result): Result {\n    const result = executor();\n    this.applyAll(result.events);\n    return result;\n  }\n\n  protected apply(event: DomainEvent, isFromHistory = false): void {\n    if (!isFromHistory) {\n      this[INTERNAL_EVENTS].push(event);\n    }\n    this._currentVersion = this._currentVersion.increase();\n    if (isFromHistory) {\n      this._committedVersion = this._committedVersion.increase();\n    }\n    const handler = this.getEventHandler(event);\n    if (!handler && !(event instanceof AbstractFailureDomainEvent)) {\n      throw new Error(`Handler for domain event ${event.eventType} not found!`);\n    }\n    if (handler) {\n      handler.call(this, event);\n    }\n  }\n\n  private getEventHandler(event: DomainEvent): (event: DomainEvent) => void | undefined {\n    const handler = `on${this.getEventName(event)}`;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return this[handler];\n  }\n\n  protected getEventName(event: DomainEvent): string {\n    const { constructor } = Object.getPrototypeOf(event);\n    return constructor.name as string;\n  }\n\n  get aggregateId(): AggregateId {\n    return this.id!;\n  }\n\n  get committedVersion(): AggregateVersion {\n    return this._committedVersion;\n  }\n\n  get currentVersion(): AggregateVersion {\n    return this._currentVersion;\n  }\n}\n","export * from './abstract-mutable-aggregate-root'\nexport * from './aggregate-root.repository'\n","export function isDefined<T>(x: T | undefined): x is T {\n    return typeof x !== \"undefined\" && x !== null;\n}\n\nexport function isNotDefined<T>(x: T | undefined): x is undefined {\n    return !isDefined(x);\n}\n","export * from './defined'\n","import { AbstractFailureDomainEvent } from \"../event/abstract-failure-domain-event\";\nimport { AbstractSuccessDomainEvent } from \"../event/abstract-success-domain-event\";\nimport { DomainEvent } from \"../event/domain-event\";\n\nexport abstract class Result<S extends AbstractSuccessDomainEvent = AbstractSuccessDomainEvent,\n  F extends AbstractFailureDomainEvent = AbstractFailureDomainEvent> {\n  static success<S extends AbstractSuccessDomainEvent = AbstractSuccessDomainEvent>(events: undefined | S | S[] = undefined): Success<S> {\n    return events === undefined\n      ? Success.empty<S>()\n      : Array.isArray(events)\n        ? Success.many<S>(events)\n        : Success.single<S>(events);\n  }\n\n  static failure<F extends AbstractFailureDomainEvent = AbstractFailureDomainEvent>(event: F): Failure<F> {\n    return new Failure<F>(event);\n  }\n\n  abstract failureReason(): string | undefined;\n\n  abstract get events(): (S | F)[];\n\n  isSuccess(): boolean {\n    return this.failureReason() === undefined;\n  }\n\n  isFailure(): boolean {\n    return !this.isSuccess();\n  }\n\n  handleEvents(handler: (event: DomainEvent) => unknown): void {\n    this.events.map(it => it as DomainEvent).forEach(handler);\n  }\n}\n\nexport class Success<S extends AbstractSuccessDomainEvent = AbstractSuccessDomainEvent> extends Result<S> {\n  private readonly _events: S[];\n\n  private constructor(events: S[]) {\n    super();\n    this._events = events;\n  }\n\n  static empty<S extends AbstractSuccessDomainEvent = AbstractSuccessDomainEvent>(): Success<S> {\n    return new Success<S>([]);\n  }\n\n  get events(): S[] {\n    return [...this._events];\n  }\n\n  static many<S extends AbstractSuccessDomainEvent = AbstractSuccessDomainEvent>(events: S[]): Success<S> {\n    return new Success<S>([...events]);\n  }\n\n  static single<S extends AbstractSuccessDomainEvent = AbstractSuccessDomainEvent>(event: S): Success<S> {\n    return new Success<S>([event]);\n  }\n\n  failureReason(): undefined {\n    return undefined;\n  }\n\n  also<S2 extends AbstractSuccessDomainEvent = AbstractSuccessDomainEvent>(anotherSuccess: Success<S2>): Success<S | S2> {\n    if (!anotherSuccess.isSuccess()) {\n      throw new Error(\"Cannot concat result which is success and failure at the same time!\");\n    }\n    return new Success<S | S2>([...this.events, ...anotherSuccess.events]);\n  }\n}\n\nexport class Failure<F extends AbstractFailureDomainEvent = AbstractFailureDomainEvent> extends Result<F> {\n  private readonly reason: F;\n\n  constructor(reason: F) {\n    super();\n    this.reason = reason;\n  }\n\n  failureReason(): string {\n    return this.reason.data.reason;\n  }\n\n  get events(): F[] {\n    return [this.reason];\n  }\n}\n","export * from './result'\nexport * from './failure-reason'\n","import {DomainEvent} from '../event';\nimport {AbstractMutableAggregateRoot} from '../aggregate-mutable';\nimport {AbstractDomainEvent} from '../event';\n\nexport interface Type<T> extends Function {\n  new(...args: any[]): T;\n}\n\nexport type ExpectedDomainEvent<T extends DomainEvent> = {\n  type: Type<T>;\n  data?: T[\"data\"];\n};\n\nexport function expectDomainEvent<T extends DomainEvent>(\n    eventsSource: AbstractMutableAggregateRoot<any> | { events: DomainEvent[] },\n    expected: ExpectedDomainEvent<T>\n): void {\n  const domainEvents = eventsSource instanceof AbstractMutableAggregateRoot\n    ? eventsSource.getUncommittedEvents().filter(it => isDomainEvent(it))\n    : eventsSource.events;\n  const foundEvent = domainEvents.find(it => it instanceof expected.type);\n  if (isDomainEvent(foundEvent)) {\n    expect(foundEvent).toBeInstanceOf(expected.type);\n    if (expected.data) {\n      expect(foundEvent.data).toEqual(expected.data);\n    }\n  } else {\n    throw new Error(`Expected domain event was not published! Domain events: ${domainEvents}`);\n  }\n}\n\nexport function isDomainEvent(event: unknown | undefined): event is DomainEvent {\n  return event !== undefined && event instanceof AbstractDomainEvent;\n}\n","export * from './aggregate-root.test-assertions'\n","export abstract class TimeProvider {\n  abstract currentDate(): Date;\n}\n","export * from './time-provider'\n","export * from './aggregate'\nexport * from './aggregate-mutable'\nexport * from './event'\nexport * from './extensions'\nexport * from './result'\nexport * from './test'\nexport * from './time'\n","import {Square} from \"./square\";\nimport {Bishop, King, Knight, Pawn, Piece, PieceName, Queen, Rook, Side} from \"../pieces\";\nimport {PieceMoved} from \"./move\";\nimport {isDefined, isNotDefined} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nconst BOARD_SIZE = 8;\n\nexport type PieceOnSquare = { piece: Piece, square: Square };\ntype MovePieceResult = { board: ChessBoard, moves: PieceMoved[] };\nexport type LastMove = { piece: Piece; from: Square; to: Square; }\n\n/**\n * Szachownica jest niemutowalna (metody nigdy nie zmieniają stanu, ale jeśli modyfikują ustawienie szachów, to zwracają nowy obiekt).\n * Niemutowalność zapewnia, że np. szach, gdy otrzyma szachownicę, nie zmieni ułożenia innych pionków.\n */\nexport class ChessBoard {\n\n  private readonly movePieceHandler = new CastlingMovePieceHandler(new EnPassantMovePieceHandler(new OrdinaryMovePieceHandler()));\n\n  private constructor(private pieces: { [square: string]: Piece } = {}, readonly lastMove: LastMove | undefined = undefined) {\n  }\n\n  static empty(): ChessBoard {\n    return new ChessBoard({});\n  }\n\n  static starting(): ChessBoard {\n    return new ChessBoard({\n      \"A1\": new Rook(Side.WHITE),\n      \"B1\": new Knight(Side.WHITE),\n      \"C1\": new Bishop(Side.WHITE),\n      \"D1\": new Queen(Side.WHITE),\n      \"E1\": new King(Side.WHITE),\n      \"F1\": new Bishop(Side.WHITE),\n      \"G1\": new Knight(Side.WHITE),\n      \"H1\": new Rook(Side.WHITE),\n      \"A2\": new Pawn(Side.WHITE),\n      \"B2\": new Pawn(Side.WHITE),\n      \"C2\": new Pawn(Side.WHITE),\n      \"D2\": new Pawn(Side.WHITE),\n      \"E2\": new Pawn(Side.WHITE),\n      \"F2\": new Pawn(Side.WHITE),\n      \"G2\": new Pawn(Side.WHITE),\n      \"H2\": new Pawn(Side.WHITE),\n      \"A8\": new Rook(Side.BLACK),\n      \"B8\": new Knight(Side.BLACK),\n      \"C8\": new Bishop(Side.BLACK),\n      \"D8\": new Queen(Side.BLACK),\n      \"E8\": new King(Side.BLACK),\n      \"F8\": new Bishop(Side.BLACK),\n      \"G8\": new Knight(Side.BLACK),\n      \"H8\": new Rook(Side.BLACK),\n      \"A7\": new Pawn(Side.BLACK),\n      \"B7\": new Pawn(Side.BLACK),\n      \"C7\": new Pawn(Side.BLACK),\n      \"D7\": new Pawn(Side.BLACK),\n      \"E7\": new Pawn(Side.BLACK),\n      \"F7\": new Pawn(Side.BLACK),\n      \"G7\": new Pawn(Side.BLACK),\n      \"H7\": new Pawn(Side.BLACK),\n    })\n  }\n\n  static withPieces(pieces: { [square: string]: Piece }): ChessBoard {\n    return new ChessBoard(pieces);\n  }\n\n  withMovedPiece(piece: Piece, from: Square, to: Square): MovePieceResult {\n    const moveResult = this.movePieceHandler.handle(this, {piece, from, to});\n    const lastMove = moveResult.moves[moveResult.moves.length - 1];\n    return {...moveResult, board: moveResult.board.withLastMove({from: lastMove.from, to: lastMove.to, piece: lastMove.piece})}\n  }\n\n  afterMove(from: Square, to: Square): ChessBoard {\n    const piece = this.pieceOn(from)!;\n    return this.cloneBoard()\n        .withoutPieceOn(from)\n        .withPieceOn(to, piece)\n        .withLastMove({from, to, piece});\n  }\n\n  withPieceOn(square: Square, piece: Piece | undefined): ChessBoard {\n    const clone = this.cloneBoard();\n    delete clone.pieces[square.algebraicNotation]\n    if (piece) {\n      clone.pieces[square.algebraicNotation] = piece\n    }\n    return clone;\n  }\n\n  withoutPieceOn(square: Square): ChessBoard {\n    const clone = this.cloneBoard();\n    delete clone.pieces[square.algebraicNotation]\n    return clone;\n  }\n\n  withLastMove(lastMove: LastMove): ChessBoard {\n    return this.cloneBoard(lastMove);\n  }\n\n  pieceOn(square: Square): Piece | undefined {\n    return this.pieces[square.algebraicNotation];\n  }\n\n  squareOfKing(side: Side): Square | undefined {\n    const found = this.squaresWith(new King(side));\n    return found.length == 1 ? found[0] : undefined;\n  }\n\n  squaresWith(pieceToFind: Piece | PieceName): Square[] {\n    return this.piecesOnSquares\n        .filter(pieceOnSquare => pieceToFind instanceof Piece ? pieceOnSquare.piece.equals(pieceToFind) : pieceOnSquare.piece.name === pieceToFind)\n        .map(pieceOnSquare => pieceOnSquare.square);\n  }\n\n  squareIsOccupied(square: Square): boolean {\n    return this.pieceOn(square) !== undefined;\n  }\n\n  get piecesOnSquares(): PieceOnSquare[] {\n    return Object.entries(this.pieces)\n        .map(([algebraicSquare, pieceOnSquare]) => ({piece: pieceOnSquare, square: Square.fromAlgebraicNotation(algebraicSquare)}))\n        .sort((pieceOnSquare1, pieceOnSquare2) => pieceOnSquare1.square.algebraicNotation.localeCompare(pieceOnSquare2.square.algebraicNotation));\n  }\n\n  isStalemateFor(side: Side): boolean {\n    return !this.isKingChecked(side) && !this.canMoveOn(side);\n  }\n\n  canMoveOn(side: Side): boolean {\n    return this.piecesOnSquares\n        .filter(pieceWithSquare => pieceWithSquare.piece.side === side)\n        .some(pieceWithSquare => pieceWithSquare.piece.canMove(this, pieceWithSquare.square));\n  }\n\n  isKingChecked(side?: Side): boolean {\n    const checkedKing = this.checkedKing();\n    return checkedKing !== undefined && (isNotDefined(side) || checkedKing.piece.side === side);\n  }\n\n  checkedKing(): { piece: King, square: Square } | undefined {\n    const checkedKingOnSquare = this.piecesOnSquares\n        .find(pieceWithSquare => isKing(pieceWithSquare.piece) && pieceWithSquare.piece.isInCheck(this, pieceWithSquare.square));\n    return isNotDefined(checkedKingOnSquare) ? undefined : {\n      piece: checkedKingOnSquare.piece as King,\n      square: checkedKingOnSquare.square\n    };\n  }\n\n  cloneBoard(lastMove: LastMove | undefined = undefined): ChessBoard {\n    return new ChessBoard({...this.pieces}, lastMove ? lastMove : this.lastMove);\n  }\n\n  get height(): number {\n    return BOARD_SIZE;\n  }\n\n  get width(): number {\n    return BOARD_SIZE;\n  }\n}\n\ntype MovePieceCommand = { piece: Piece, from: Square, to: Square };\n\nabstract class MovePieceHandler {\n\n  protected constructor(protected readonly next?: MovePieceHandler) {\n  }\n\n  protected abstract handler(chessBoard: ChessBoard, command: MovePieceCommand): MovePieceResult\n\n  handle(chessBoard: ChessBoard, props: MovePieceCommand): MovePieceResult {\n    let result: MovePieceResult = this.handler(chessBoard, props);\n    if (this.next) {\n      const nextResult = this.next.handle(result.board, props);\n      result = {board: nextResult.board, moves: [...result.moves, ...nextResult.moves]};\n    }\n    return result;\n  }\n\n}\n\nclass OrdinaryMovePieceHandler extends MovePieceHandler {\n\n  constructor(next?: MovePieceHandler) {\n    super(next);\n  }\n\n  handler(chessBoard: ChessBoard, command: MovePieceCommand): MovePieceResult {\n    const capturedPiece = chessBoard.pieceOn(command.to);\n    const board = chessBoard\n        .withoutPieceOn(command.from)\n        .withPieceOn(command.to, command.piece);\n    const pieceMoved = {\n      piece: command.piece,\n      from: command.from,\n      to: command.to,\n      captured: !capturedPiece ? undefined : {\n        piece: capturedPiece,\n        onSquare: command.to\n      }\n    };\n    return {board, moves: [pieceMoved]};\n  }\n}\n\nclass CastlingMovePieceHandler extends MovePieceHandler {\n\n  constructor(next?: MovePieceHandler) {\n    super(next);\n  }\n\n  handler(chessBoard: ChessBoard, command: MovePieceCommand): MovePieceResult {\n    const castlingRook = isKing(command.piece) && this.castlingRook(chessBoard, command.from, command.to);\n    if (!castlingRook) {\n      return {board: chessBoard, moves: []};\n    }\n    const board = chessBoard\n        .withoutPieceOn(castlingRook.from)\n        .withPieceOn(castlingRook.to, castlingRook.rook);\n    const rookMoved = {\n      piece: castlingRook.rook,\n      from: castlingRook.from,\n      to: castlingRook.to\n    };\n    return {board, moves: [rookMoved]};\n  }\n\n  castlingRook(chessBoard: ChessBoard, from: Square, to: Square): { rook: Rook, from: Square, to: Square } | undefined {\n    const kingMoveDiff = from.difference(to);\n    const kingLongMoveOnTheSameRow = isDefined(kingMoveDiff.col) && kingMoveDiff.col == 2 || kingMoveDiff.col == -2;\n    if (!kingLongMoveOnTheSameRow) {\n      return undefined;\n    }\n    const isKingSide = kingMoveDiff.col == 2;\n\n    const rookFrom = from.transform({col: isKingSide ? 3 : -4})!;\n    const rookTo = rookFrom.transform({col: isKingSide ? -2 : 3})!;\n    const rookPiece = chessBoard.pieceOn(rookFrom);\n    return isRook(rookPiece) ? {rook: rookPiece, from: rookFrom, to: rookTo} : undefined;\n  }\n\n}\n\n//TODO: Refactor\nclass EnPassantMovePieceHandler extends MovePieceHandler {\n\n  constructor(next?: MovePieceHandler) {\n    super(next);\n  }\n\n  handle(chessBoard: ChessBoard, props: MovePieceCommand): MovePieceResult {\n    let result: MovePieceResult = this.handler(chessBoard, props);\n    if (this.next && result.moves.length === 0) {\n      const nextResult = this.next.handle(result.board, props);\n      result = {board: nextResult.board, moves: [...result.moves, ...nextResult.moves]};\n    }\n    return result;\n  }\n\n  handler(chessBoard: ChessBoard, command: MovePieceCommand): MovePieceResult {\n    const squareWithPieceToCaptureByEnPassant = command.to.transform({row: command.piece.isWhite() ? -1 : 1});\n    if (!squareWithPieceToCaptureByEnPassant) {\n      return {board: chessBoard, moves: []}\n    }\n    const pawnToCapture: Piece | undefined = chessBoard.pieceOn(squareWithPieceToCaptureByEnPassant);\n    const isEnPassantCaptureAttack = squareWithPieceToCaptureByEnPassant\n        && pawnToCapture && pawnToCapture.equals(chessBoard.lastMove?.piece)\n        && command.piece.name === \"Pawn\"\n        && command.from.column.character !== command.to.column.character\n        && pawnToCapture.name === \"Pawn\"\n        && pawnToCapture.isOpponentOf(command.piece);\n\n    if (!isEnPassantCaptureAttack) {\n      return {board: chessBoard, moves: []}\n    }\n    const board = chessBoard\n        .withoutPieceOn(squareWithPieceToCaptureByEnPassant!)\n        .withoutPieceOn(command.from)\n        .withPieceOn(command.to, command.piece);\n    const pawnMoved = {\n      piece: command.piece,\n      from: command.from,\n      to: command.to,\n      captured: pawnToCapture ? {piece: pawnToCapture, onSquare: squareWithPieceToCaptureByEnPassant} : undefined\n    };\n    return {board, moves: [pawnMoved]};\n  }\n\n}\n\nfunction isKing(piece: Piece | undefined): piece is King {\n  return piece !== undefined && piece.name === \"King\";\n}\n\nfunction isRook(piece: Piece | undefined): piece is Rook {\n  return piece !== undefined && piece.name === \"Rook\";\n}\n\n\n\n","export * from './chess-board'\nexport * from './chess-board-generator'\nexport * from './move'\nexport * from './square'\nexport * from './helper'\n","import {ChessGameId} from \"../game\";\nimport {AbstractSuccessDomainEvent} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {\n  DomainEventId,\n  FailureReason,\n  AbstractFailureDomainEvent,\n  EventMetadata\n} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport abstract class AbstractChessGameSuccessDomainEvent<P = any, M extends EventMetadata = EventMetadata>\n    extends AbstractSuccessDomainEvent<ChessGameId, P, M> {\n\n  constructor(eventId: DomainEventId, occurredAt: Date, aggregateId: ChessGameId, data: P, metadata: M) {\n    super(eventId, occurredAt, aggregateId, data, metadata);\n  }\n\n  get aggregateType(): string {\n    return \"ChessGame\";\n  }\n\n  get chessGameId(): ChessGameId {\n    return this.aggregateId\n  }\n}\n\nexport abstract class AbstractChessGameFailureDomainEvent<P extends FailureReason = FailureReason, M extends EventMetadata = EventMetadata>\n    extends AbstractFailureDomainEvent<ChessGameId, P, M> {\n\n  constructor(eventId: DomainEventId, occurredAt: Date, aggregateId: ChessGameId, data: P, metadata: M) {\n    super(eventId, occurredAt, aggregateId, data, metadata);\n  }\n\n  get aggregateType(): string {\n    return \"ChessGame\";\n  }\n\n  get chessGameId(): ChessGameId {\n    return this.aggregateId\n  }\n}\n\nexport type ChessGameDomainEvent = AbstractChessGameSuccessDomainEvent | AbstractChessGameFailureDomainEvent\n","import { AbstractChessGameSuccessDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game/chess-game-id\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {King} from \"../pieces/king\";\nimport { Square } from \"../board/square\";\nimport {Piece} from \"../pieces/piece\";\n\nexport type CheckmateOccurredData = {\n  king: King,\n  onSquare: Square,\n  byMove: {piece: Piece, from: Square, to: Square}\n};\n\nexport class CheckmateHasOccurred extends AbstractChessGameSuccessDomainEvent<CheckmateOccurredData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: CheckmateOccurredData, metadata: EventMetadata): CheckmateHasOccurred {\n    return new CheckmateHasOccurred(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `CheckmateHasOccurred{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import {AbstractChessGameSuccessDomainEvent} from \"./chess-game-abstract-domain-event\";\nimport {ChessGameId} from \"../game\";\nimport {EventMetadata} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {DomainEventId} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {Side} from \"../pieces\";\n\nexport type ChessGameFinishedData = {\n  readonly result: {\n    readonly name: \"Win\",\n    readonly winner: Side,\n    readonly reason: { readonly name: \"Stalemate\", readonly on: Side } | { readonly name: \"Checkmate\", readonly kingOn: Side }\n  } | {\n    readonly name: \"Draw\",\n    readonly reason: { name: \"Stalemate\", on: Side }\n  }\n};\n\nexport class ChessGameFinished extends AbstractChessGameSuccessDomainEvent<ChessGameFinishedData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: ChessGameFinishedData, metadata: EventMetadata): ChessGameFinished {\n    return new ChessGameFinished(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `ChessGameFinished{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import {AbstractChessGameSuccessDomainEvent} from \"./chess-game-abstract-domain-event\";\nimport {ChessGameId} from \"../game\";\nimport {DomainEventId} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {EventMetadata} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {ChessBoard} from \"../board\";\nimport {Side} from \"../pieces\";\nimport {PlayerId} from \"../game\";\n\nexport type ChessGameStartedData = {\n  readonly chessGameId: ChessGameId,\n  readonly chessBoard: ChessBoard,\n  readonly startSide: Side,\n  readonly players: { readonly white: PlayerId, readonly black: PlayerId }\n};\n\nexport class ChessGameStarted extends AbstractChessGameSuccessDomainEvent<ChessGameStartedData> {\n  private readonly TYPE = 'ChessGameStarted';\n\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: ChessGameStartedData, metadata: EventMetadata): ChessGameStarted {\n    return new ChessGameStarted(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `ChessGameStarted{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { AbstractChessGameSuccessDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game/chess-game-id\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {Side} from \"../pieces/side\";\n//TODO: Not used!\nexport type ChessGameWasLostData = {\n  loser: Side,\n  reason: LossReason\n};\n\nexport type LossReason = { name: \"Stalemate\", on: Side } | { name: \"Checkmate\", kingOn: Side }\n\nexport class ChessGameWasLost extends AbstractChessGameSuccessDomainEvent<ChessGameWasLostData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: ChessGameWasLostData, metadata: EventMetadata): ChessGameWasLost {\n    return new ChessGameWasLost(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `ChessGameWasLost{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { AbstractChessGameSuccessDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {Side} from \"../pieces\";\n\n//TODO: Not used!\nexport type ChessGameWasWonData = {\n  readonly winner: Side,\n  readonly reason: WonReason\n};\n\nexport type WonReason = { name: \"Stalemate\", on: Side } | { name: \"Checkmate\", kingOn: Side }\n\nexport class ChessGameWasWon extends AbstractChessGameSuccessDomainEvent<ChessGameWasWonData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: ChessGameWasWonData, metadata: EventMetadata): ChessGameWasWon {\n    return new ChessGameWasWon(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `ChessGameWasWon{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { Square } from \"../board/square\";\nimport { AbstractChessGameSuccessDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game/chess-game-id\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {King} from \"../pieces/king\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport type KingWasCheckedData = {\n  king: King,\n  onSquare: Square\n};\n\nexport class KingWasChecked extends AbstractChessGameSuccessDomainEvent<KingWasCheckedData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: KingWasCheckedData, metadata: EventMetadata): KingWasChecked {\n    return new KingWasChecked(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `KingWasChecked{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import {Square} from \"../board/square\";\nimport {AbstractChessGameSuccessDomainEvent} from \"./chess-game-abstract-domain-event\";\nimport {ChessGameId} from \"../game/chess-game-id\";\nimport {DomainEventId} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {Side} from \"../pieces/side\";\nimport {Piece} from \"../pieces/piece\";\nimport {EventMetadata} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport type KingWasUncheckedData = {\n  king: { side: Side },\n  onSquare: Square\n  afterMove: { piece: Piece; from: Square; to: Square; captured?: { piece: Piece, onSquare: Square } }\n};\n\nexport class KingWasUnchecked extends AbstractChessGameSuccessDomainEvent<KingWasUncheckedData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: KingWasUncheckedData, metadata: EventMetadata): KingWasUnchecked {\n    return new KingWasUnchecked(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = (): string => {\n    return `KingWasUnchecked{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { AbstractChessGameSuccessDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game/chess-game-id\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport { Square } from \"../board/square\";\nimport {Pawn} from \"../pieces/pawn\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport type PawnPromotionWasEnabledData = {\n  onSquare: Square,\n  pawn: Pawn\n};\n\nexport class PawnPromotionWasEnabled extends AbstractChessGameSuccessDomainEvent<PawnPromotionWasEnabledData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: PawnPromotionWasEnabledData, metadata: EventMetadata): PawnPromotionWasEnabled {\n    return new PawnPromotionWasEnabled(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `PawnPromotionWasEnabled{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { AbstractChessGameSuccessDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game/chess-game-id\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport { Square } from \"../board/square\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport type PawnWasNotPromotedData = {\n  onSquare: Square,\n  reason: string\n};\n\nexport class PawnWasNotPromoted extends AbstractChessGameSuccessDomainEvent<PawnWasNotPromotedData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: PawnWasNotPromotedData, metadata: EventMetadata): PawnWasNotPromoted {\n    return new PawnWasNotPromoted(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `PawnWasNotPromoted{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { AbstractChessGameSuccessDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game/chess-game-id\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport { Square } from \"../board/square\";\nimport {Pawn} from \"../pieces/pawn\";\nimport { PromotionPiece } from \"../pieces/promotion-piece\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport type PawnWasPromotedData = {\n  onSquare: Square,\n  from: Pawn,\n  to: PromotionPiece\n};\n\nexport class PawnWasPromoted extends AbstractChessGameSuccessDomainEvent<PawnWasPromotedData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: PawnWasPromotedData, metadata: EventMetadata): PawnWasPromoted {\n    return new PawnWasPromoted(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `PawnWasPromoted{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { AbstractChessGameSuccessDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {Piece} from \"../pieces\";\nimport { Square } from \"../board\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport type PieceWasCapturedData = {\n  piece: Piece;\n  onSquare: Square;\n  byMove: {piece: Piece, from: Square, to: Square}\n};\n\nexport class PieceWasCaptured extends AbstractChessGameSuccessDomainEvent<PieceWasCapturedData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: PieceWasCapturedData, metadata: EventMetadata): PieceWasCaptured {\n    return new PieceWasCaptured(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `PieceWasCaptured{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { AbstractChessGameSuccessDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game/chess-game-id\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {Piece} from \"../pieces/piece\";\nimport { Square } from \"../board/square\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport type PieceWasMovedData = {\n  piece: Piece;\n  from: Square;\n  to: Square;\n  captured?: {\n    piece: Piece,\n    onSquare: Square\n  }\n};\n\nexport class PieceWasMoved extends AbstractChessGameSuccessDomainEvent<PieceWasMovedData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: PieceWasMovedData, metadata: EventMetadata): PieceWasMoved {\n    return new PieceWasMoved(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `PieceWasMoved{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { AbstractChessGameFailureDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game/chess-game-id\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport { Square } from \"../board/square\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport type PieceWasNotMovedData = {\n  from: Square;\n  to: Square;\n  reason: string;\n};\n\nexport class PieceWasNotMoved extends AbstractChessGameFailureDomainEvent<PieceWasNotMovedData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: PieceWasNotMovedData, metadata: EventMetadata): PieceWasNotMoved {\n    return new PieceWasNotMoved(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `PieceWasNotMoved{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { AbstractChessGameSuccessDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game/chess-game-id\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {Side} from \"../pieces/side\";\nimport {Piece} from \"../pieces/piece\";\nimport { Square } from \"../board/square\";\n\nexport type StalemateOccurredData = {\n  for: Side,\n  byMove: {piece: Piece, from: Square, to: Square}\n};\n\nexport class StalemateHasOccurred extends AbstractChessGameSuccessDomainEvent<StalemateOccurredData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: StalemateOccurredData, metadata: EventMetadata): StalemateHasOccurred {\n    return new StalemateHasOccurred(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `StalemateHasOccurred{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import {Side} from \"../pieces/side\";\nimport {ChessBoard} from \"../board/chess-board\";\nimport { Square } from \"../board/square\";\nimport {Piece} from \"../pieces/piece\";\n\nexport class ChessGameHistoryLog {\n\n  private constructor(private readonly gameHistory: ChessGameHistoryEntry[]) {\n  }\n\n  static empty(): ChessGameHistoryLog {\n    return new ChessGameHistoryLog([]);\n  }\n\n  record(entry: ChessGameHistoryEntry): ChessGameHistoryLog {\n    return new ChessGameHistoryLog([...this.gameHistory, entry]);\n  }\n\n  last(): ChessGameHistoryEntry | undefined {\n    return [...this.gameHistory].pop();\n  }\n\n  forgetLast(): ChessGameHistoryLog {\n    const after = [...this.gameHistory];\n    after.pop();\n    return new ChessGameHistoryLog(after);\n  }\n}\n\nexport type ChessGameHistoryEntry = {\n  readonly currentSide: Side\n  readonly chessBoard: ChessBoard\n  readonly timestamp: Date,\n  readonly checkedKing?: {\n    readonly square: Square,\n    readonly piece: Piece\n  }\n}\n\n","export * from './chess-game-history-log'\n","import { AbstractChessGameFailureDomainEvent } from \"./chess-game-abstract-domain-event\";\nimport { ChessGameId } from \"../game/chess-game-id\";\nimport { DomainEventId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport { EventMetadata } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport type ChessGameNotStartedData = {\n  reason: string;\n};\n\nexport class ChessGameNotStarted extends AbstractChessGameFailureDomainEvent<ChessGameNotStartedData> {\n  static event(chessGameId: ChessGameId, occurredAt: Date, data: ChessGameNotStartedData, metadata: EventMetadata): ChessGameNotStarted {\n    return new ChessGameNotStarted(DomainEventId.generate(), occurredAt, chessGameId, data, metadata);\n  }\n\n  public toString = () : string => {\n    return `ChessGameNotStarted{chessGameId=${this.chessGameId}, occurredAt=${this.occurredAt}, data=${JSON.stringify(this.data)}, metadata=${JSON.stringify(this.metadata)}}`;\n  }\n}\n","import { Side } from '../pieces';\nimport { ChessBoard } from '../board';\nimport { Piece } from '../pieces';\nimport { Square } from '../board';\nimport { PieceMove } from '../pieces';\nimport { Pawn } from '../pieces';\nimport { ChessGameId } from './chess-game-id';\nimport { Failure, Result, Success } from '@ddd-es-ts-chess/ddd-building-blocks-domain';\nimport { PieceWasNotMoved as PieceNotMovedEvent, PieceWasNotMovedData } from '../event/piece-was-not-moved';\nimport { PieceWasMoved, PieceWasMoved as PieceMovedEvent } from '../event/piece-was-moved';\nimport { TimeProvider } from '@ddd-es-ts-chess/ddd-building-blocks-domain';\nimport {\n  ChessGameDomainEvent,\n  PawnPromotionWasEnabled,\n} from '../event';\nimport { KingWasChecked } from '../event';\nimport { KingWasUnchecked } from '../event';\nimport { PawnWasPromoted, PawnWasPromotedData } from '../event';\nimport { PawnWasNotPromoted, PawnWasNotPromotedData } from '../event';\nimport { PieceWasCaptured } from '../event';\nimport { DomainEvent } from '@ddd-es-ts-chess/ddd-building-blocks-domain';\nimport { PromotionPiece } from '../pieces';\nimport { CausationId } from '@ddd-es-ts-chess/ddd-building-blocks-domain';\nimport { CorrelationId } from '@ddd-es-ts-chess/ddd-building-blocks-domain';\nimport { ChessGameHistoryLog } from '../history';\nimport { ChessGameStarted } from '../event';\nimport { CheckmateHasOccurred } from '../event';\nimport { StalemateHasOccurred } from '../event';\nimport { ChessGameFinished } from '../event';\nimport { isDefined, isNotDefined } from '@ddd-es-ts-chess/ddd-building-blocks-domain';\nimport { DomainEvents } from '@ddd-es-ts-chess/ddd-building-blocks-domain';\nimport { PlayerId } from './player-id';\nimport { ChessGameNotStarted, ChessGameNotStartedData } from '../event/chess-game-not-started';\n\nexport class ChessGame {\n\n  private gameHistory: ChessGameHistoryLog = ChessGameHistoryLog.empty();\n  private state!: ChessGameState;\n  private events: DomainEvents = DomainEvents.clean();\n\n  private constructor(private readonly timeProvider: TimeProvider) {\n  }\n\n  static with(props: { timeProvider: TimeProvider }): ChessGame {\n    return new ChessGame(props.timeProvider);\n  }\n\n  static from(events: ChessGameDomainEvent[]): (timeProvider: TimeProvider) => ChessGame {\n    return (timeProvider: TimeProvider) => {\n      if (!events || events.length === 0) {\n        throw new Error('Cannot reconstruct chess game from empty events');\n      }\n      const [started] = events;\n      if (!(started instanceof ChessGameStarted)) {\n        throw new Error('Invalid first event!');\n      }\n      return events\n        .reduce((chessGame, event) => chessGame.onEvent(event, true), ChessGame.with({ timeProvider }));\n    };\n  }\n\n  start = (\n    command: { readonly chessBoard: ChessBoard, readonly id: ChessGameId, readonly startSide: Side, readonly players: Players },\n  ): Success<ChessGameStarted> | Failure<ChessGameNotStarted> => {\n    const causationId = CausationId.generate();\n    const correlationId = causationId.toCorrelation();\n    const eventMetadata = { correlationId, causationId };\n    if (this.state && this.state.started) {\n      const chessGameNotStarted: ChessGameNotStartedData = {\n        reason: 'Chess game has already started!',\n      };\n      return Result.failure(ChessGameNotStarted.event(command.id, this.timeProvider.currentDate(), chessGameNotStarted, eventMetadata));\n    }\n\n    const chessGameStarted = ChessGameStarted.event(command.id, this.timeProvider.currentDate(), {\n      chessGameId: command.id,\n      chessBoard: command.chessBoard,\n      startSide: command.startSide,\n      players: command.players,\n    }, eventMetadata);\n\n    const result = Result.success(chessGameStarted);\n    result.handleEvents(this.onEvent);\n    return result;\n  };\n\n  movePiece = (\n    command: { by: PlayerId, from: Square, to: Square },\n  ): Success<PieceMoveEffect> | Failure<PieceNotMovedEvent> =>\n    this.executeCommand(({ chessGameId, occurredAt }, eventMetadata) => {\n      if (!this.state.started) {\n        const pieceNotMoved: PieceWasNotMovedData = {\n          from: command.from,\n          to: command.to,\n          reason: 'Chess game has not already started!',\n        };\n        return Result.failure(PieceNotMovedEvent.event(chessGameId, occurredAt, pieceNotMoved, eventMetadata));\n      }\n      if (this.state.finished) {\n        const pieceNotMoved: PieceWasNotMovedData = {\n          from: command.from,\n          to: command.to,\n          reason: 'Chess game has already finished!',\n        };\n        return Result.failure(PieceNotMovedEvent.event(chessGameId, occurredAt, pieceNotMoved, eventMetadata));\n      }\n      if (this.state.currentPromotion) {\n        const pieceNotMoved: PieceWasNotMovedData = {\n          from: command.from,\n          to: command.to,\n          reason: `Promotion for #${this.state.currentPromotion.pawn.side} on square ${this.state.currentPromotion.onSquare} is in progress!`,\n        };\n        return Result.failure(PieceNotMovedEvent.event(chessGameId, occurredAt, pieceNotMoved, eventMetadata));\n      }\n      const piece = this.state.chessBoard.pieceOn(command.from);\n      if (!isDefined(piece) || piece.side !== this.sideOf(command.by)) {\n        const pieceNotMoved: PieceWasNotMovedData = {\n          from: command.from,\n          to: command.to,\n          reason: `Piece on square ${command.from.algebraicNotation} is not piece of players with id ${command.by.toString()}!`,\n        };\n        return Result.failure(PieceNotMovedEvent.event(chessGameId, occurredAt, pieceNotMoved, eventMetadata));\n      }\n      if (!isDefined(piece) || piece.side !== this.state.currentSide) {\n        const pieceNotMoved: PieceWasNotMovedData = {\n          from: command.from,\n          to: command.to,\n          reason: `Piece on square ${command.from.algebraicNotation} is not current player selected piece!`,\n        };\n        return Result.failure(PieceNotMovedEvent.event(chessGameId, occurredAt, pieceNotMoved, eventMetadata));\n      }\n      const pieceAvailableMoves = piece.getAvailableMoves(this.state.chessBoard, command.from);\n      const canMoveToSelectedSquare = pieceAvailableMoves.map(move => move.square.id).includes(command.to.id);\n      if (!canMoveToSelectedSquare) {\n        const pieceNotMoved: PieceWasNotMovedData = {\n          from: command.from,\n          to: command.to,\n          reason: 'Selected square is not available for the piece!',\n        };\n        return Result.failure(PieceNotMovedEvent.event(chessGameId, occurredAt, pieceNotMoved, eventMetadata));\n      }\n\n      const moveResult = this.state.chessBoard.withMovedPiece(piece, command.from, command.to);\n      const afterPieceMoveEvents = moveResult.moves\n        .map(pieceMoved => this.calculateMoveEffect(PieceMovedEvent.event(chessGameId, occurredAt, pieceMoved, eventMetadata)))\n        .reduce((e1, e2) => [...e1, ...e2]);\n      return Result.success(afterPieceMoveEvents);\n    });\n\n  private sideOf(player: PlayerId): Side | undefined {\n    if (player.equals(this.state.players.white)) {\n      return Side.WHITE;\n    }\n    if (player.equals(this.state.players.black)) {\n      return Side.BLACK;\n    }\n    return undefined;\n  }\n\n  private calculateMoveEffect(pieceMovedEvent: PieceMovedEvent): PieceMoveEffect[] {\n    const events: PieceMoveEffect[] = [pieceMovedEvent];\n    const pieceCaptured = this.pieceCaptureMoveEffect(pieceMovedEvent);\n    if (pieceCaptured) {\n      events.push(pieceCaptured);\n    }\n    const promotionEnabled = this.pawnPromotionMoveEffect(pieceMovedEvent);\n    if (promotionEnabled) {\n      events.push(promotionEnabled);\n    }\n    const kingCheckChanged = this.kingCheckMoveEffect(pieceMovedEvent);\n    if (kingCheckChanged) {\n      events.push(kingCheckChanged);\n    }\n    const checkmateOccurred = this.checkmateMoveEffect(pieceMovedEvent);\n    if (checkmateOccurred) {\n      events.push(checkmateOccurred);\n      events.push(\n        ChessGameFinished.event(this.state.id, this.timeProvider.currentDate(),\n          {\n            result: {\n              name: 'Win',\n              winner: Side.another(checkmateOccurred.data.king.side),\n              reason: {\n                name: 'Checkmate',\n                kingOn: checkmateOccurred.data.king.side,\n              },\n            },\n          },\n          {\n            correlationId: checkmateOccurred.metadata.correlationId,\n            causationId: CausationId.fromEventId(checkmateOccurred.eventId),\n          }),\n      );\n    }\n    const stalemateOccurred = this.stalemateMoveEffect(pieceMovedEvent);\n    if (stalemateOccurred) {\n      events.push(stalemateOccurred);\n      events.push(\n        ChessGameFinished.event(this.state.id, this.timeProvider.currentDate(),\n          {\n            result: {\n              name: 'Draw',\n              reason: {\n                name: 'Stalemate',\n                on: stalemateOccurred.data.for,\n              },\n            },\n          },\n          {\n            correlationId: stalemateOccurred.metadata.correlationId,\n            causationId: CausationId.fromEventId(stalemateOccurred.eventId),\n          }),\n      );\n    }\n    return events;\n  }\n\n  private kingCheckMoveEffect({ eventId, data, metadata }: PieceMovedEvent): KingWasChecked | KingWasUnchecked | undefined {\n    const pieceMoved = data;\n    const boardAfterMove = this.state.chessBoard.withMovedPiece(pieceMoved.piece, pieceMoved.from, pieceMoved.to).board;\n    const checkedKing = boardAfterMove.checkedKing();\n    if (checkedKing) {\n      return KingWasChecked.event(this.state.id, this.timeProvider.currentDate(),\n        { king: checkedKing.piece, onSquare: checkedKing.square },\n        { ...metadata, causationId: CausationId.fromEventId(eventId) },\n      );\n    } else if (this.state.checkedKing) {\n      return KingWasUnchecked.event(this.state.id, this.timeProvider.currentDate(),\n        { king: this.state.checkedKing.piece, onSquare: this.state.checkedKing.square, afterMove: pieceMoved },\n        { ...metadata, causationId: CausationId.fromEventId(eventId) },\n      );\n    }\n    return undefined;\n  }\n\n  private pawnPromotionMoveEffect({ eventId, data, metadata }: PieceMovedEvent): PawnPromotionWasEnabled | undefined {\n    const pieceMoved = data;\n    const isPromotionAvailable = Pawn.isPawn(pieceMoved.piece) && pieceMoved.piece.isOnTheOppositeEdgeOfTheBoard(pieceMoved.to);\n    if (!isPromotionAvailable) {\n      return undefined;\n    }\n    return PawnPromotionWasEnabled.event(this.state.id, this.timeProvider.currentDate(),\n      { onSquare: pieceMoved.to, pawn: pieceMoved.piece as Pawn },\n      { ...metadata, causationId: CausationId.fromEventId(eventId) },\n    );\n  }\n\n  private pieceCaptureMoveEffect({ eventId, data, metadata }: PieceMovedEvent): PieceWasCaptured | undefined {\n    const pieceMoved = data;\n    if (!pieceMoved.captured) {\n      return undefined;\n    }\n    return PieceWasCaptured.event(this.state.id, this.timeProvider.currentDate(),\n      {\n        onSquare: pieceMoved.captured.onSquare,\n        piece: pieceMoved.captured.piece,\n        byMove: { piece: pieceMoved.piece, from: pieceMoved.from, to: pieceMoved.to },\n      },\n      { ...metadata, causationId: CausationId.fromEventId(eventId) },\n    );\n  }\n\n  private checkmateMoveEffect({ eventId, data, metadata }: PieceWasMoved): CheckmateHasOccurred | undefined {\n    const pieceMoved = data;\n    const checkedKing = this.state.chessBoard.checkedKing();\n    if (!checkedKing || !checkedKing.piece.isCheckmate(this.state.chessBoard, checkedKing.square)) {\n      return undefined;\n    }\n    return CheckmateHasOccurred.event(this.state.id, this.timeProvider.currentDate(),\n      {\n        onSquare: checkedKing.square,\n        king: checkedKing.piece,\n        byMove: { piece: pieceMoved.piece, from: pieceMoved.from, to: pieceMoved.to },\n      },\n      { ...metadata, causationId: CausationId.fromEventId(eventId) },\n    );\n  }\n\n  private stalemateMoveEffect({ eventId, data, metadata }: PieceWasMoved): StalemateHasOccurred | undefined {\n    const pieceMoved = data;\n    const isStalemateFor = (side: Side) => this.state.chessBoard.isStalemateFor(side);\n    const stalemateSide = isStalemateFor(Side.WHITE) ? Side.WHITE : (isStalemateFor(Side.BLACK) ? Side.BLACK : undefined);\n    if (!stalemateSide) {\n      return undefined;\n    }\n    return StalemateHasOccurred.event(this.state.id, this.timeProvider.currentDate(),\n      {\n        for: stalemateSide,\n        byMove: { piece: pieceMoved.piece, from: pieceMoved.from, to: pieceMoved.to },\n      },\n      { ...metadata, causationId: CausationId.fromEventId(eventId) },\n    );\n  }\n\n  promotePawn = (by: PlayerId, onSquare: Square, toPiece: PromotionPiece): Success<PawnWasPromoted | KingWasChecked> | Failure<PawnWasNotPromoted> =>\n    this.executeCommand(({ chessGameId, occurredAt }, eventMetadata) => {\n      if (isNotDefined(this.state.currentPromotion) || this.state.currentPromotion.onSquare !== onSquare) {\n        const pawnWasNotPromoted: PawnWasNotPromotedData = {\n          onSquare,\n          reason: `No current promotion on square ${onSquare.algebraicNotation}!`,\n        };\n        return Result.failure(PawnWasNotPromoted.event(chessGameId, occurredAt, pawnWasNotPromoted, eventMetadata));\n      }\n      if (isDefined(this.state.currentPromotion) && this.state.currentPromotion.pawn.side !== this.sideOf(by)) {\n        const pawnWasNotPromoted: PawnWasNotPromotedData = {\n          onSquare,\n          reason: `Pawn to promotion does not belongs to player with id ${by}!`,\n        };\n        return Result.failure(PawnWasNotPromoted.event(chessGameId, occurredAt, pawnWasNotPromoted, eventMetadata));\n      }\n      const events = [];\n      const promotion: PawnWasPromotedData = {\n        onSquare,\n        from: this.state.currentPromotion.pawn,\n        to: toPiece,\n      };\n      events.push(PawnWasPromoted.event(chessGameId, this.timeProvider.currentDate(), promotion, eventMetadata));\n      const chessBoardAfterPromotion = this.state.chessBoard.withPieceOn(promotion.onSquare, promotion.to);\n      const checkedKingAfterPromotion = chessBoardAfterPromotion.checkedKing();\n      if (isDefined(checkedKingAfterPromotion)) {\n        events.push(\n          KingWasChecked.event(chessGameId, occurredAt,\n            { king: checkedKingAfterPromotion.piece, onSquare: checkedKingAfterPromotion.square },\n            eventMetadata,\n          ),\n        );\n      }\n      return Result.success(events);\n    });\n\n  private recordToHistory(state: ChessGameState) {\n    const entry = {\n      currentSide: state.currentSide,\n      chessBoard: state.chessBoard,\n      timestamp: this.timeProvider.currentDate(),\n      checkedKing: state.checkedKing,\n    };\n    this.gameHistory = this.gameHistory.record(entry);\n  }\n\n  get board(): ChessBoard {\n    return this.state.chessBoard;\n  }\n\n  get currentSide(): Side {\n    return this.state.currentSide;\n  }\n\n  movesForPiece(square: Square, side: Side): PieceMove[] | undefined {\n    const piece = this.state.chessBoard.pieceOn(square);\n    return isDefined(piece) && piece.side === side ? piece.getAvailableMoves(this.state.chessBoard, square) : undefined;\n  }\n\n  undoLastMove(): void {\n    const historicalState = this.gameHistory.last();\n    if (historicalState) {\n      this.updateState({\n        chessBoard: historicalState.chessBoard,\n        currentSide: historicalState.currentSide,\n        checkedKing: historicalState.checkedKing,\n      });\n      this.gameHistory = this.gameHistory.forgetLast();\n    }\n  }\n\n  private executeCommand<T extends Result>(\n    executor: (eventProps: { chessGameId: ChessGameId, occurredAt: Date }, eventMetadata: { causationId: CausationId, correlationId: CorrelationId }) => T,\n  ): T {\n    const causationId = CausationId.generate();\n    const correlationId = causationId.toCorrelation();\n    const result = executor({ chessGameId: this.state.id, occurredAt: this.timeProvider.currentDate() }, {\n      causationId,\n      correlationId,\n    });\n    result.handleEvents(this.onEvent);\n    return result;\n  }\n\n  stateChangeEventHandlers: { [key: string]: (event: any) => ChessGameStateUpdate } = {\n    ChessGameStarted: ({ data }: ChessGameStarted) => ({\n      id: data.chessGameId,\n      chessBoard: data.chessBoard,\n      currentSide: data.startSide,\n      players: data.players,\n      checkedKing: undefined,\n      currentPromotion: undefined,\n      finished: false,\n      started: true,\n    }),\n    KingWasChecked: ({ data }: KingWasChecked) => ({\n      checkedKing: { piece: data.king, square: data.onSquare },\n    }),\n    KingWasUnchecked: () => ({\n      checkedKing: undefined,\n    }),\n    PieceWasMoved: ({ data }: PieceWasMoved) => ({\n      chessBoard: this.state.chessBoard.withMovedPiece(data.piece, data.from, data.to).board,\n      currentSide: Side.another(data.piece.side),\n    }),\n    PawnWasPromoted: ({ data }: PawnWasPromoted) => ({\n      chessBoard: this.state.chessBoard.withPieceOn(data.onSquare, data.to),\n      currentPromotion: undefined,\n    }),\n    PawnPromotionWasEnabled: ({ data }: PawnPromotionWasEnabled) => ({\n      currentPromotion: data,\n    }),\n    ChessGameFinished: () => ({\n      finished: true,\n    }),\n  };\n\n  private onEvent = (domainEvent: DomainEvent, isReplaying = false) => {\n    if (!isReplaying) {\n      this.events = this.events.append(domainEvent);\n    }\n    if (domainEvent instanceof PieceWasMoved) {\n      this.recordToHistory(this.state);\n    }\n    const stateChangeEventHandler = this.stateChangeEventHandlers[domainEvent.eventType];\n    if (stateChangeEventHandler) {\n      const stateUpdate = stateChangeEventHandler(domainEvent);\n      this.updateState(stateUpdate);\n    }\n    return this;\n  };\n\n  private updateState(update: ChessGameStateUpdate): void {\n    this.state = {\n      ...this.state,\n      ...update,\n    };\n  }\n\n  get id(): ChessGameId {\n    return this.state.id;\n  }\n\n  get uncommittedEvents(): DomainEvent[] {\n    return this.events.toArray();\n  }\n}\n\ntype ChessGameStateUpdate = Partial<ChessGameState>;\n\ntype Players = { white: PlayerId, black: PlayerId }\n\ntype ChessGameState = {\n  readonly id: ChessGameId,\n  readonly chessBoard: ChessBoard,\n  readonly currentSide: Side,\n  readonly players: Players,\n  readonly checkedKing: { square: Square, piece: Piece } | undefined\n  readonly currentPromotion: { pawn: Pawn, onSquare: Square } | undefined,\n  readonly finished: boolean,\n  readonly started: boolean\n}\n\nexport type PieceMoveEffect =\n  PieceMovedEvent\n  | PawnPromotionWasEnabled\n  | KingWasChecked\n  | KingWasUnchecked\n  | PieceWasCaptured\n  | CheckmateHasOccurred\n  | StalemateHasOccurred\n  | ChessGameFinished;\n\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import { AggregateId } from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport { v4 as uuid } from \"uuid\";\n\nexport class ChessGameId implements AggregateId {\n  private readonly TYPE = \"ChessGameId\";\n\n  private constructor(readonly raw: string) {\n  }\n\n  static of(raw: string): ChessGameId {\n    return new ChessGameId(raw);\n  }\n\n  static generate(): ChessGameId {\n    return new ChessGameId(uuid());\n  }\n\n  toString(): string {\n    return this.raw;\n  }\n}\n","/**\n * Czy promować można na wszystko, czy tylko poprzednio zbite?\n */\nexport class PromotionAvailabilityPolicy{\n\n}\n","export class PlayerId {\n  TYPE = \"PlayerId\"\n\n  constructor(private readonly raw: string) {\n  }\n\n  static of(raw: string){\n    return new PlayerId(raw);\n  }\n\n  toString() {\n    return this.raw;\n  }\n\n  equals(another: PlayerId | undefined){\n    return another !== undefined && another.raw.toLowerCase() === this.raw.toLowerCase();\n  }\n}\n","export * from './chess-game'\nexport * from './chess-game-id'\nexport * from './promotion-availability-policy'\nexport * from './stalemate-policy'\nexport * from './player-id'\n","import {Side} from \"@ddd-es-ts-chess/chess-domain\";\nimport { PieceName } from \"@ddd-es-ts-chess/chess-domain\";\n\n\nexport default class FontAwesomePieceIcons {\n\n    static getBy(name: PieceName, side: Side): string {\n        return `<i class=\"fas fa-chess-${name.toLowerCase()} ${side}\"></i>`\n    }\n\n}\n","import {columnNumberToCharacter} from \"@ddd-es-ts-chess/chess-domain\";\nimport FontAwesomePieceIcons from \"./font-awesome/font-awesome-piece-icons\";\nimport {Column, Piece, PieceName, Pieces, Row, Side, Square} from \"@ddd-es-ts-chess/chess-domain\";\n\nexport class SquareView {\n  readonly square: Square;\n  private readonly piece: Piece | undefined;\n  private readonly isChecked: boolean = false;\n  private readonly isSelected: boolean = false;\n\n  constructor(coord: { row: Square.Number, column: Square.Number } | Square, pieceProvider: (square: Square) => Piece | undefined, checked = false, selected = false) {\n    this.square = coord instanceof Square ? coord : Square.at(Column.fromCharacter(columnNumberToCharacter(coord.column)), Row.fromNumber(coord.row));\n    this.piece = pieceProvider(this.square);\n    this.isChecked = checked;\n    this.isSelected = selected\n  }\n\n  static withoutPiece(coord: { row: Square.Number, column: Square.Number } | Square): SquareView {\n    return new SquareView(coord, () => undefined);\n  }\n\n  static fromHtml(squareElement: Element): SquareView {\n    const squareId = squareElement.id;\n    const pieceHtml = squareElement.firstElementChild;\n    const piece = !pieceHtml ? undefined : Pieces.getBy(pieceHtml.getAttribute(\"app-name\") as PieceName, pieceHtml.getAttribute(\"app-side\") as Side);\n    return new SquareView(Square.withId(squareId), () => piece, squareElement.classList.contains(\"checked-square\"), pieceHtml ? pieceHtml.classList.contains(\"app-selected-square\") : false);\n  }\n\n  withoutPiece(): SquareView {\n    return new SquareView(this.square, () => undefined, this.isChecked, this.isSelected);\n  }\n\n  withPiece(piece: Piece): SquareView {\n    return new SquareView(this.square, () => piece, this.isChecked, this.isSelected);\n  }\n\n  checked(): SquareView {\n    return new SquareView(this.square, () => this.piece, true, this.isSelected);\n  }\n\n  unchecked(): SquareView {\n    return new SquareView(this.square, () => this.piece, false, this.isSelected);\n  }\n\n  selected(): SquareView {\n    return new SquareView(this.square, () => this.piece, this.isChecked, true);\n  }\n\n  notSelected(): SquareView {\n    return new SquareView(this.square, () => this.piece, this.isChecked, false);\n  }\n\n  get pieceOnSquare(): Piece | undefined {\n    return this.piece;\n  }\n\n  html(): HTMLElement {\n    const squareView: HTMLDivElement = document.createElement(\"div\");\n    squareView.id = this.square.id;\n    squareView.classList.add(\"square\")\n    squareView.classList.add(this.square.row.number % 2 == this.square.column.number % 2 ? \"light\" : \"dark\")\n    if (this.isChecked) {\n      squareView.classList.add(\"checked-square\")\n    }\n    if (this.piece !== undefined) {\n      squareView.innerHTML = FontAwesomePieceIcons.getBy(this.piece.name, this.piece.side);\n      const pieceIcon = squareView.firstElementChild;\n      if (pieceIcon) {\n        pieceIcon.setAttribute(\"app-name\", this.piece.name);\n        pieceIcon.setAttribute(\"app-side\", this.piece.side);\n        pieceIcon.classList.add(\"app-piece-icon\")\n        if (this.isSelected) {\n          squareView.classList.add(\"app-selected-square\")\n        }\n      }\n    }\n    return squareView;\n  }\n}\n","import {\n  ChessBoard,\n  isPromotionPieceName,\n  MoveType, Piece,\n  PieceMove,\n  PieceMoved,\n  PieceName,\n  Pieces,\n  PromotionPieceName,\n  Side,\n  Square\n} from \"@ddd-es-ts-chess/chess-domain\";\nimport {ChessBoardMvp} from \"./chess-board-mvp\";\nimport {ChessGameHistoryMvp} from \"./chess-game-history-mvp\";\nimport {PlayerId, PromotionPiece} from \"@ddd-es-ts-chess/chess-domain\";\nimport {SquareView} from \"./square-view\";\n\nconst ICON_HTML_TAG_NAME = \"I\";\nconst CSS_NORMAL_MOVE_CLASS_NAME = \"normal-move\";\nconst CSS_ATTACK_MOVE_CLASS_NAME = \"attack-move\";\n\n\nexport default class WebChessGameView implements ChessBoardMvp.View, ChessGameHistoryMvp.View {\n\n  private readonly chessBoardPresenter: ChessBoardMvp.Presenter;\n  private readonly chessGameHistoryPresenter: ChessGameHistoryMvp.Presenter;\n\n  constructor(\n      chessBoardPresenterSupplier: (view: ChessBoardMvp.View) => ChessBoardMvp.Presenter,\n      chessGameHistoryPresenterSupplier: (view: ChessGameHistoryMvp.View) => ChessGameHistoryMvp.Presenter\n  ) {\n    this.chessBoardPresenter = chessBoardPresenterSupplier(this);\n    this.chessGameHistoryPresenter = chessGameHistoryPresenterSupplier(this);\n    this.chessBoardPresenter.loadChessBoard();\n    this.registerBoardClickListener();\n    this.registerUndoButtonClickListener();\n  }\n\n  showChessBoard(chessBoard: ChessBoard): void {\n    for (let row = chessBoard.width; row >= 1; row--) {\n      for (let column = 1; column <= chessBoard.height; column++) {\n        const squareView = new SquareView({\n          column: column as Square.Number,\n          row: row as Square.Number\n        }, square => chessBoard.pieceOn(square));\n        this.boardHtmlElement()!.appendChild(squareView.html());\n      }\n    }\n  }\n\n  private clearChessBoard() {\n    while (this.boardHtmlElement()!.firstChild) {\n      this.boardHtmlElement()!.removeChild(this.boardHtmlElement().firstChild!);\n    }\n  }\n\n  private boardHtmlElement(): HTMLElement {\n    return document.getElementById(\"board\")!;\n  }\n\n  private registerBoardClickListener() {\n    this.boardHtmlElement()!.addEventListener(\"click\", this.boardTouched.bind(this));\n  }\n\n\n  private registerUndoButtonClickListener() {\n    document.querySelector(\"#undoBtn\")!.addEventListener(\"click\", this.undoLastMove.bind(this));\n  }\n\n  private showPieceIcon(squareToChangeId: string, pieceName: PieceName, pieceSide: Side) {\n    const squareHtml = document.getElementById(squareToChangeId);\n    if (squareHtml && squareHtml.parentNode) {\n      const squareView = SquareView.fromHtml(squareHtml);\n      squareHtml.parentNode.replaceChild(\n          squareView.withPiece(Pieces.getBy(pieceName, pieceSide)).html(), squareHtml\n      );\n    }\n  }\n\n  private boardTouched(clickEvent: MouseEvent) {\n    const squareView = this.clickedSquareView(clickEvent);\n    this.chessBoardPresenter.selectSquare(squareView.square);\n  }\n\n  showPawnPromotionSelection(pawnSquare: Square, pawnSide: Side): void {\n    const promptResult = prompt(\"You can promote your pawn. Choose the new piece.\", \"Queen\");\n    const newPieceName = promptResult == null ? undefined : promptResult;\n    if (!newPieceName || !isPromotionPieceName(newPieceName)) {\n      this.showInvalidPieceNameAlert(newPieceName, pawnSquare, pawnSide);\n    } else {\n      this.chessBoardPresenter.promotePawn(PlayerId.of(pawnSide), pawnSquare, Pieces.getBy(newPieceName, pawnSide) as PromotionPiece);\n    }\n  }\n\n  changePawnToPromoted(onSquare: Square, promotedTo: { name: PromotionPieceName, side: Side }): void {\n    this.showPieceIcon(onSquare.id, promotedTo.name, promotedTo.side);\n  }\n\n  showCurrentSide(side: Side): void {\n    const currentSideHtml = document.getElementById(\"app-current-player\");\n    currentSideHtml && (currentSideHtml.innerHTML = `<p>Current player: ${side}</p>`);\n  }\n\n  private showInvalidPieceNameAlert(newPiece: string | undefined, pawnSquare: Square, pawnSide: Side) {\n    alert(\"Invalid piece name: \" + newPiece);\n    this.showPawnPromotionSelection(pawnSquare, pawnSide);\n  }\n\n  showSelectedPieceAvailableMoves(availableMoves: PieceMove[]): void {\n    this.showAvailableMoves(availableMoves);\n  }\n\n  moveSelectedPiece(pieceMoved: PieceMoved): void {\n    this.hidePieceIcon(pieceMoved.from, pieceMoved.piece);\n    this.showPieceIcon(pieceMoved.to.id, pieceMoved.piece.name, pieceMoved.piece.side);\n    this.hideSelectedPieceAvailableMoves();\n  }\n\n  removeCapturedPiece(onSquare: Square, piece: Piece): void {\n    this.hidePieceIcon(onSquare, piece);\n  }\n\n  private hidePieceIcon(onSquare: Square, piece: Piece) {\n    const squareId = onSquare.id;\n    const squareHtml = document.getElementById(squareId);\n    if (squareHtml && squareHtml.parentNode) {\n      const squareView = SquareView.fromHtml(squareHtml);\n      if (piece.equals(squareView.pieceOnSquare)) {\n        squareHtml.parentNode.replaceChild(squareView.withoutPiece().html(), squareHtml);\n      }\n    }\n  }\n\n  private clickedSquareView(clickEvent: MouseEvent): SquareView {\n    const eventTarget = clickEvent.target as Element;\n    const squareHtml = this.isPieceIconClicked(clickEvent) ? (eventTarget.parentNode as Element) : eventTarget;\n    return SquareView.fromHtml(squareHtml)\n  }\n\n  private isPieceIconClicked(clickEvent: MouseEvent): boolean {\n    const eventTarget = clickEvent.target as Element;\n    return eventTarget.tagName === ICON_HTML_TAG_NAME;\n  }\n\n  private showAvailableMoves(moves: PieceMove[]): void {\n    for (const move of moves) {\n      if (move.type === MoveType.ATTACK) {\n        document.getElementById(move.square.id)!.classList.add(CSS_ATTACK_MOVE_CLASS_NAME);\n      } else {\n        document.getElementById(move.square.id)!.classList.add(CSS_NORMAL_MOVE_CLASS_NAME);\n      }\n    }\n  }\n\n  hideSelectedPieceAvailableMoves(): void {\n    const shownMoves = [...document.getElementsByClassName(CSS_NORMAL_MOVE_CLASS_NAME), ...document.getElementsByClassName(CSS_ATTACK_MOVE_CLASS_NAME)];\n    for (let i = 0; i < shownMoves.length; i++) {\n      shownMoves[i].classList.remove(CSS_NORMAL_MOVE_CLASS_NAME, CSS_ATTACK_MOVE_CLASS_NAME);\n    }\n  }\n\n  private undoLastMove() {\n    this.chessGameHistoryPresenter.undoLastMove();\n  }\n\n  onLastMoveUndone(): void {\n    this.clearChessBoard();\n    this.chessBoardPresenter.loadChessBoard();\n  }\n\n  checkKingOn(kingSquare: Square): void {\n    const squareId = kingSquare.id;\n    const squareHtml = document.getElementById(squareId);\n    if (squareHtml && squareHtml.parentNode) {\n      const squareView = SquareView.fromHtml(squareHtml);\n      squareHtml.parentNode.replaceChild(squareView.checked().html(), squareHtml);\n    }\n  }\n\n  uncheckKing(): void {\n    const checkedSquares = document.getElementsByClassName(\"checked-square\");\n    for (let i = 0; i < checkedSquares.length; i++) {\n      const squareHtml = checkedSquares[i];\n      if (squareHtml && squareHtml.parentNode) {\n        const squareView = SquareView.fromHtml(squareHtml);\n        squareHtml.parentNode.replaceChild(squareView.unchecked().html(), squareHtml);\n      }\n    }\n  }\n\n  showSelectedPieceOn(square: Square): void {\n    const squareId = square.id;\n    const squareHtml = document.getElementById(squareId);\n    if (squareHtml && squareHtml.parentNode) {\n      const squareView = SquareView.fromHtml(squareHtml);\n      squareHtml.parentNode.replaceChild(squareView.selected().html(), squareHtml);\n    }\n  }\n\n  notShowSelectedPiece(): void {\n    const checkedSquares = document.getElementsByClassName(\"app-selected-square\");\n    for (let i = 0; i < checkedSquares.length; i++) {\n      const squareHtml = checkedSquares[i];\n      if (squareHtml && squareHtml.parentNode) {\n        const squareView = SquareView.fromHtml(squareHtml);\n        squareHtml.parentNode.replaceChild(squareView.notSelected().html(), squareHtml);\n      }\n    }\n  }\n\n  showGameResult(result: { name: \"Win\"; winner: Side; reason: { name: \"Stalemate\"; on: Side } | { name: \"Checkmate\"; kingOn: Side } } | { name: \"Draw\"; reason: { name: \"Stalemate\"; on: Side } }): void {\n    const currentSideHtml = document.getElementById(\"app-game-result\");\n    currentSideHtml && (currentSideHtml.innerHTML = `<p>Game finished with ${result.reason.name} ${result.name === \"Win\" ? \"The winner is: \" + result.winner : \"Nobody won!\"}</p>`);\n  }\n\n}\n\n","import { PieceEmoji } from \"./piece-emoji\";\n\nconst uppercaseAvailableColumns = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"] as const;\n\ntype PieceColumnCharacter = typeof uppercaseAvailableColumns[number];\n\nexport namespace EmojiConfiguration {\n  export type RowNumber = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8\n  export type SquareVale = PieceEmoji | PieceColumnCharacter | ' ' | '_'\n}\n\nexport type EmojiConfiguration = { [key in EmojiConfiguration.RowNumber | 0]: EmojiConfiguration.SquareVale[] }\n\nexport const EMOJIS_START_CONFIG: EmojiConfiguration = {\n  8: ['♜', '♞', '♝', '♛', '♚', '♝', '♞', '♜'],\n  7: ['♟', '♟', '♟', '♟', '♟', '♟', '♟', '♟'],\n  6: [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n  5: [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n  4: [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n  3: [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n  2: ['♙', '♙', '♙', '♙', '♙', '♙', '♙', '♙'],\n  1: ['♖', '♘', '♗', '♕', '♔', '♗', '♘', '♖'],\n  0: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']\n}\n","/**\n * ♙♟ - Pawn\n * ♖♜ - Rook\n * ♘♞ - Knight\n * ♗♝ - Bishop\n * ♕♛ - Queen\n * ♔♚ - King\n */\n\nexport const blackPieceEmojis = [\"♟\", \"♜\", \"♞\", \"♝\", \"♛\", \"♚\"] as const;\nexport const whitePieceEmojis = [\"♙\", \"♖\", \"♘\", \"♗\", \"♕\", \"♔\"] as const;\nexport type WhitePieceEmoji = typeof whitePieceEmojis[number]\nexport type BlackPieceEmoji = typeof blackPieceEmojis[number]\nexport type PieceEmoji = WhitePieceEmoji | BlackPieceEmoji\n\nexport function isWhitePieceEmoji(input: any): input is WhitePieceEmoji {\n  return input !== undefined && whitePieceEmojis.includes(input);\n}\n\nexport function isBlackPieceEmoji(input: any): input is BlackPieceEmoji {\n  return input !== undefined && blackPieceEmojis.includes(input);\n}\n\nexport function isPieceEmoji(input: any): input is PieceEmoji {\n  return isWhitePieceEmoji(input) || isBlackPieceEmoji(input);\n}\n","import { isBlackPieceEmoji, PieceEmoji } from \"./piece-emoji\";\n\nconst pieces = [\"King\", \"Queen\", \"Bishop\", \"Knight\", \"Rook\", \"Pawn\"] as const;\nexport type EmojiPieceName = typeof pieces[number];\nexport type EmojiPieceSide = \"black\" | \"white\";\n\nfunction sideOf(pieceEmoji: PieceEmoji): EmojiPieceSide {\n  return isBlackPieceEmoji(pieceEmoji) ? \"black\" : \"white\";\n}\n\ntype EmojiPieceMapping = { [key in EmojiPieceName]: { [key in EmojiPieceSide]: PieceEmoji } };\n\nconst mappingOfPieces: EmojiPieceMapping = {\n  Bishop: { black: \"♝\", white: \"♗\" },\n  Knight: { black: \"♞\", white: \"♘\" },\n  Pawn: { black: \"♟\", white: \"♙\" },\n  Queen: { black: \"♛\", white: \"♕\" },\n  Rook: { black: \"♜\", white: \"♖\" },\n  King: { white: \"♔\", black: \"♚\" }\n};\n\nexport class PieceEmojis {\n\n  static toIcon(name: EmojiPieceName, side: EmojiPieceSide): string {\n    return mappingOfPieces[name][side];\n  }\n\n  static toPiece(emoji: PieceEmoji): { name: EmojiPieceName, side: EmojiPieceSide } {\n    const pieceName = Object.keys(mappingOfPieces)\n      .map(pieceName => pieceName as EmojiPieceName)\n      .find(pieceName => {\n        const pieceMapping = mappingOfPieces[pieceName];\n        return pieceMapping.black === emoji || pieceMapping.white === emoji;\n      });\n    if (!pieceName) {\n      throw new Error(`Lack of mapping for emoji ${emoji}`);\n    }\n    return { name: pieceName, side: sideOf(emoji) };\n  }\n\n  toIcon(name: EmojiPieceName, side: EmojiPieceSide): string {\n    return PieceEmojis.toIcon(name, side);\n  }\n\n  toPiece(emoji: PieceEmoji): { name: EmojiPieceName, side: EmojiPieceSide } {\n    return PieceEmojis.toPiece(emoji);\n  }\n\n}\n","import {EmojiConfiguration, EMOJIS_START_CONFIG, isPieceEmoji} from \"@ddd-es-ts-chess/chess-piece-emoji\";\nimport {ChessBoard, Column, ColumnCharacter, Pieces, Row, Side, Square} from \"@ddd-es-ts-chess/chess-domain\";\nimport {PieceEmojis} from \"@ddd-es-ts-chess/chess-piece-emoji\";\nimport {ChessBoardGenerator, Piece} from \"@ddd-es-ts-chess/chess-domain\";\n\nexport class EmojiChessBoardGenerator implements ChessBoardGenerator {\n\n  constructor(private readonly piecesConfiguration: EmojiConfiguration = EMOJIS_START_CONFIG) {\n  }\n\n  generate(): ChessBoard {\n    const pieces: { [square: string]: Piece } = {}\n    Object.keys(this.piecesConfiguration)\n        .map(row => row as unknown as EmojiConfiguration.RowNumber | 0)\n        .filter(row => row !== 0)\n        .map(row => row as unknown as EmojiConfiguration.RowNumber)\n        .forEach(rowNumber => {\n          const rowSquares = this.piecesConfiguration[rowNumber]\n          rowSquares.forEach((squareValue: any, index: string | number) => {\n            const columnCharacter = Square.uppercaseAvailableColumns[index as number] as ColumnCharacter\n            if (isPieceEmoji(squareValue)) {\n              const emojiPiece = PieceEmojis.toPiece(squareValue)\n              const square = Square.at(Column.fromCharacter(columnCharacter), Row.fromNumber(rowNumber as Square.Number));\n              pieces[square.algebraicNotation] = Pieces.getBy(emojiPiece.name, Side.byName(emojiPiece.side));\n            }\n          })\n        })\n    return ChessBoard.withPieces(pieces);\n  }\n\n}\n","import {ChessBoardMvp} from \"./chess-board-mvp\";\nimport {PieceWasCaptured, Square} from \"@ddd-es-ts-chess/chess-domain\";\nimport {PieceWasMoved} from \"@ddd-es-ts-chess/chess-domain\";\nimport {PawnPromotionWasEnabled} from \"@ddd-es-ts-chess/chess-domain\";\nimport {KingWasChecked} from \"@ddd-es-ts-chess/chess-domain\";\nimport {PawnWasPromoted} from \"@ddd-es-ts-chess/chess-domain\";\nimport {PromotionPiece} from \"@ddd-es-ts-chess/chess-domain\";\nimport {PromotionPieceName} from \"@ddd-es-ts-chess/chess-domain\";\nimport {ChessGameFinished} from \"@ddd-es-ts-chess/chess-domain\";\nimport {DomainEvent} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {isNotDefined} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\nimport {Piece, PlayerId} from \"@ddd-es-ts-chess/chess-domain\";\n\nexport class ChessBoardPresenter implements ChessBoardMvp.Presenter {\n\n  private selectedPieceOn: Square | undefined = undefined;\n\n  constructor(private readonly model: ChessBoardMvp.Model, private readonly view: ChessBoardMvp.View) {\n  }\n\n  loadChessBoard(): void {\n    const chessBoard = this.model.board;\n    this.view.showChessBoard(chessBoard);\n    const checkedKing = chessBoard.checkedKing();\n    if (checkedKing) {\n      this.view.checkKingOn(checkedKing.square);\n    }\n    this.view.showCurrentSide(this.model.currentSide)\n  }\n\n  selectSquare(square: Square): void {\n    if (isNotDefined(this.selectedPieceOn)) {\n      this.selectedPieceOn = square;\n      const availableMoves = this.model.movesForPiece(square, this.model.currentSide);\n      if (availableMoves && availableMoves.length > 0) {\n        this.view.showSelectedPieceAvailableMoves(availableMoves);\n        this.view.showSelectedPieceOn(square)\n      } else {\n        this.view.hideSelectedPieceAvailableMoves();\n        this.view.notShowSelectedPiece()\n        this.selectedPieceOn = undefined;\n      }\n    } else {\n      this.model.movePiece({\n        by: PlayerId.of(this.model.currentSide),\n        from: this.selectedPieceOn,\n        to: square\n      }).handleEvents(this.handle);\n      this.view.notShowSelectedPiece()\n      this.selectedPieceOn = undefined;\n    }\n  }\n\n  promotePawn(by: PlayerId, pawnSquare: Square, toPiece: PromotionPiece): void {\n    this.model.promotePawn(by, pawnSquare, toPiece).handleEvents(this.handle);\n    this.view.showCurrentSide(this.model.currentSide)\n  }\n\n  eventHandlers: { [key: string]: (event: any) => unknown } = {\n    PieceWasCaptured: ({data}: PieceWasCaptured) =>\n        this.view.removeCapturedPiece(data.onSquare, data.piece),\n    PieceWasMoved: ({data}: PieceWasMoved) =>\n        this.view.moveSelectedPiece(data),\n    PieceWasNotMoved: () =>\n        this.view.hideSelectedPieceAvailableMoves(),\n    KingWasChecked: ({data}: KingWasChecked) =>\n        this.view.checkKingOn(data.onSquare),\n    KingWasUnchecked: () =>\n        this.view.uncheckKing(),\n    PawnPromotionWasEnabled: ({data}: PawnPromotionWasEnabled) =>\n        this.view.showPawnPromotionSelection(data.onSquare, data.pawn.side),\n    PawnWasPromoted: ({data}: PawnWasPromoted) =>\n        this.view.changePawnToPromoted(data.onSquare, {name: data.to.name as PromotionPieceName, side: data.to.side}),\n    ChessGameFinished: ({data}: ChessGameFinished) =>\n        this.view.showGameResult(data.result),\n    Any: (event: DomainEvent) => {\n      console.log(event)\n      this.view.showCurrentSide(this.model.currentSide)\n    }\n  }\n\n  private handle = (event: DomainEvent) => {\n    const eventHandler = this.eventHandlers[event.eventType]\n    if (eventHandler) {\n      eventHandler(event)\n    }\n    this.eventHandlers.Any(event)\n  };\n}\n","import { ChessGameHistoryMvp } from \"./chess-game-history-mvp\";\n\nexport class ChessGameHistoryPresenter implements ChessGameHistoryMvp.Presenter {\n\n  constructor(private readonly model: ChessGameHistoryMvp.Model, private readonly view: ChessGameHistoryMvp.View) {\n  }\n\n  undoLastMove(): void {\n    this.model.undoLastMove();\n    this.view.onLastMoveUndone();\n  }\n\n}\n","import {TimeProvider} from \"@ddd-es-ts-chess/ddd-building-blocks-domain\";\n\nexport class SystemTimeProvider implements TimeProvider {\n  currentDate(): Date {\n    return new Date();\n  }\n}\n","import WebChessGameView from './chess/presentation/web-chess-game-view';\nimport { EmojiChessBoardGenerator } from './chess/infrastructure/board/emoji-chess-board-generator';\nimport { ChessBoardPresenter } from './chess/presentation/chess-board-presenter';\nimport { ChessGameHistoryPresenter } from './chess/presentation/chess-game-history-presenter';\nimport { SystemTimeProvider } from './chess/infrastructure/time/system-time-provider';\nimport { Side } from '@ddd-es-ts-chess/chess-domain';\nimport { ChessGameId } from '@ddd-es-ts-chess/chess-domain';\nimport { ChessGame } from '@ddd-es-ts-chess/chess-domain';\nimport { ChessBoardGenerator, PlayerId } from '@ddd-es-ts-chess/chess-domain';\n\nconst chessBoardGenerator: ChessBoardGenerator = new EmojiChessBoardGenerator();\nconst chessBoard = chessBoardGenerator.generate();\nconst chessGame = ChessGame.with({ timeProvider: new SystemTimeProvider() });\nchessGame.start({\n  chessBoard,\n  id: ChessGameId.generate(),\n  startSide: Side.WHITE,\n  players: { white: PlayerId.of('white'), black: PlayerId.of('black') },\n});\n\nconst view = new WebChessGameView(\n  view => new ChessBoardPresenter(chessGame, view),\n  view => new ChessGameHistoryPresenter(chessGame, view));\n\nwindow.view = view;\nwindow.chessGame = chessGame;\n"]}